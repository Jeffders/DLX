<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Bot.Internal.Schema</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Bot.Schema.Activity">
            <summary>
            An Activity is the basic communication type for the Bot Framework 3.0 protocol.
            </summary>
            <remarks>
            The Activity class contains all properties that individual, more specific activities
            could contain. It is a superset type.
            </remarks>
        </member>
        <member name="F:Microsoft.Bot.Schema.Activity.ContentType">
            <summary>
            Content-type for an Activity.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.#ctor">
            <summary>
            Create an instance of the Activity class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.#ctor(System.String)">
            <summary>
            Create an instance of the Activity class
            </summary>
            <param name="type">Type of the activity</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.CreateMessageActivity">
            <summary>
            Create an instance of the Activity class with IMessageActivity masking
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.CreateContactRelationUpdateActivity">
            <summary>
            Create an instance of the Activity class with IContactRelationUpdateActivity masking
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.CreateInstallationUpdateActivity">
            <summary>
            Create an instance of the Activity class with IInstallationUpdateActivity masking
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.CreateConversationUpdateActivity">
            <summary>
            Create an instance of the Activity class with IConversationUpdateActivity masking
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.CreateTypingActivity">
            <summary>
            Create an instance of the Activity class with ITypingActivity masking
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.CreateEndOfConversationActivity">
            <summary>
            Create an instance of the Activity class with IEndOfConversationActivity masking
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.CreateEventActivity">
            <summary>
            Create an instance of the Activity class with an IEventActivity masking
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.CreateInvokeActivity">
            <summary>
            Create an instance of the Activity class with IInvokeActivity masking
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.CreateMessageReactionActivity">
            <summary>
            Create an instance of the Activity class with IMessageReactionActivity masking
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.CreateMessageUpdateActivity">
            <summary>
            Create an instance of the Activity class with IMessageUpdateActivity masking
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.CreateMessageDeleteActivity">
            <summary>
            Create an instance of the Activity class with IMessageDeleteActivity masking
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.CreateSuggestionActivity">
            <summary>
            Create an instance of the Activity class with ISuggestionActivity masking
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.CreateHandoffActivity">
            <summary>
            Create an instance of the Activity class with IHandoffActivity masking
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.IsActivity(System.String)">
            <summary>
            True if the Activity is of the specified activity type.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.AsMessageActivity">
            <summary>
            Returns the activity as an IMessageActivity object if it is a message activity; otherwise, null.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.AsContactRelationUpdateActivity">
            <summary>
            Returns the activity as an IContactRelationUpdateActivity object if it is a contact relation update activity; otherwise, null.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.AsInstallationUpdateActivity">
            <summary>
            Returns the activity as an IInstallationUpdateActivity object if it is an installation update activity; otherwise, null.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.AsConversationUpdateActivity">
            <summary>
            Returns the activity as an IConversationUpdateActivity object if it is a conversation update activity; otherwise, null.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.AsTypingActivity">
            <summary>
            Returns the activity as an ITypingActivity object if it is a typing activity; otherwise, null.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.AsEndOfConversationActivity">
            <summary>
            Returns the activity as an IEndOfConversationActivity object if it is an end of conversation activity; otherwise, null.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.AsEventActivity">
            <summary>
            Returns the activity as an IEventActivity object if it is an event activity; otherwise, null.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.AsInvokeActivity">
            <summary>
            Returns the activity as an IInvokeActivity object if it is an invoke activity; otherwise, null.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.AsMessageReactionActivity">
            <summary>
            Returns the activity as an IMessageReactionActivity object if it is a message reaction activity; otherwise, null.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.AsMessageUpdateActivity">
            <summary>
            Returns the activity as an IMessageUpdateActivity if this is a message update activity; otherwise, null.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.AsMessageDeleteActivity">
            <summary>
            Returns the activity as an IMessageDeleteActivity if this is a message delete activity; otherwise, null.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.AsSuggestionActivity">
            <summary>
            Returns the activity as an ISuggestionActivity if this is a suggestion activity; otherwise, null.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.AsTraceActivity">
            <summary>
            Returns the activity as an ITraceActivity if this is a trace activity; otherwise, null.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.Redact">
            <summary>
            Returns a redacted copy of this action, suitable for logging.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.Microsoft#Bot#Schema#IMessageActivity#GetChannelData``1">
            <summary>
            Get channeldata as typed structure
            </summary>
            <typeparam name="TypeT">type to use</typeparam>
            <returns>typed object or default(TypeT)</returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.Activity.GetMentions">
            <summary>
            Gets all mentions in the activity.
            </summary>
            <returns>The mentions, or an empty array, if that activity contains none.</returns>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Type">
            <summary>
            Contains the activity type.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Id">
            <summary>
            Contains an ID that uniquely identifies the activity on the channel.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Timestamp">
            <summary>
            Contains the date and time that the message was sent, in UTC, expressed in ISO-8601 format.
            </summary>
            <remarks>This should be set by the service.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.LocalTimestamp">
            <summary>
            Contains the local date and time of the message, expressed in ISO-8601 format.
            For example, 2016-09-23T13:07:49.4714686-07:00.
            </summary>
            <remarks>This should be set by the channel client.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.LocalTimezone">
            <summary>
            Contains the name of the local timezone of the message, expressed in IANA Time Zone database format.
            For example, America/Los_Angeles.
            </summary>
            <remarks>This should be set by the channel client.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.ServiceUrl">
            <summary>
            Contains the URL that specifies the channel's service endpoint. Set by the channel.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.ChannelId">
            <summary>
            Contains an ID that uniquely identifies the channel. Set by the channel.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.From">
            <summary>
            Identifies the sender of the message.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Conversation">
            <summary>
            Identifies the conversation to which the activity belongs.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Recipient">
            <summary>
            Identifies the recipient of the message.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.TextFormat">
            <summary>
            Format of text fields Default:markdown
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.AttachmentLayout">
            <summary>
            The layout hint for multiple attachments. Default: list.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.MembersAdded">
            <summary>
            The collection of members added to the conversation.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.MembersRemoved">
            <summary>
            The collection of members removed from the conversation.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.ReactionsAdded">
            <summary>
            The collection of reactions added to the conversation.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.ReactionsRemoved">
            <summary>
            The collection of reactions removed from the conversation.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.TopicName">
            <summary>
            The updated topic name of the conversation.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.HistoryDisclosed">
            <summary>
            Indicates whether the prior history of the channel is disclosed.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Locale">
            <summary>
            A locale name for the contents of the text field.
            The locale name is a combination of an ISO 639 two- or three-letter culture code associated with a language
            and an ISO 3166 two-letter subculture code associated with a country or region.
            The locale name can also correspond to a valid BCP-47 language tag.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Text">
            <summary>
            The text content of the message.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Speak">
            <summary>
            The text to speak.
            </summary>
            <remarks>To control various characteristics of your bot's speech such as voice,
            rate, volume, pronunciation, and pitch, specify the text to speak in
            Speech Synthesis Markup Language (SSML) format.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.InputHint">
            <summary>
            Indicates whether your bot is accepting,
            expecting, or ignoring user input after the message is delivered to the client.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Summary">
            <summary>
            The text to display if the channel cannot render cards.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.SuggestedActions">
            <summary>
            The suggested actions for the activity.
            </summary>
            <remarks>Suggested actions are used to present buttons that the user can tap to provide input.
            Unlike buttons that appear within rich cards (which remain visible and accessible to the user even after being tapped),
            buttons that appear within the suggested actions pane will disappear after the user makes a selection.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Attachments">
            <summary>
            Attachments
            </summary>
            <remarks>Attachments are used to send and receive simple media attachments (image, audio, video, file) and rich cards.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Entities">
            <summary>
            Represents the entities that were mentioned in the message.
            </summary>
            <remarks>Objects in this array may be any Schema.org object. For example, the array may include Mention 
            objects that identify someone who was mentioned in the conversation and Place objects that identify a place 
            that was mentioned in the conversation.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.ChannelData">
            <summary>
            Contains channel-specific content.
            </summary>
            <remarks>Some channels provide features that require additional information that cannot be represented using 
            the attachment schema. For those cases, set this property to the channel-specific content as defined in the 
            channel's documentation.
            
            For a message originating in the channel, it might provide the original native schema object for the channel.
            For a message coming into the channel, it might accept a payload allowing you to create a "native" response for the channel.
            
            For example, the Email channel puts the original Email metadata into the ChannelData object for outgoing messages, and 
            it accepts channel data on incoming messages that contains Subject and HtmlBody properties.  
            
            The channel data essentially allows a bot to have access to native functionality on a per channel basis.
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Action">
            <summary>
            Indicates whether the recipient of a contactRelationUpdate was added or removed from the sender's contact list.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.ReplyToId">
            <summary>
            Contains the ID of the message to which this message is a reply.
            </summary>
            <remarks>To reply to a message that the user sent, set this property to the ID of the user's message. 
            Not all channels support threaded replies. In these cases, the channel will ignore this property and
            deliver messages sequentially.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Label">
            <summary>
            A descriptive label for the activity.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.ValueType">
            <summary>
            The type of the activity's value object.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Value">
            <summary>
            A value that is associated with the activity.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Name">
            <summary>
            The name of the operation associated with an invoke or event activity.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.RelatesTo">
            <summary>
            A reference to another conversation or activity.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Code">
            <summary>
            The a code for endOfConversation activities that indicates why the conversation ended.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Expiration">
            <summary>
            The time at which the activity should be considered to be "expired" and should not be presented to the recipient.
            </summary>
            <remarks>This value is serialized as an ISO 8601 encoded datetime string.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.Importance">
            <summary>
            The importance of the activity.
            </summary>
            <remarks>The default importance is "normal".</remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.DeliveryMode">
            <summary>
            A delivery hint to signal to the recipient alternate delivery paths for the activity.
            The default delivery mode is "default".
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.ListenFor">
            <summary>
            List of phrases and references that speech and language priming systems should listen for
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.TextHighlights">
            <summary>
            The collection of text fragments to highlight when the activity contains a ReplyToId value.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Activity.SemanticAction">
            <summary>
            An optional programmatic action accompanying this request
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ActivityFeatureNames">
            <summary>
            Names of features used in Activity objects
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityFeatureNames.ActivityFeaturePrefix">
            <summary>
            Prefix for activity type features (e.g. "activities/message")
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityFeatureNames.CardActionFeaturePrefix">
            <summary>
            Prefix for card action features (e.g. "actions/tap")
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityFeatureNames.CardFeaturePrefix">
            <summary>
            Prefix for card features (e.g., "cards/hero")
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityFeatureNames.ChannelData">
            <summary>
            ChannelData feature
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityFeatureNames.SummaryFeature">
            <summary>
            Summary field feature
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityFeatureNames.SpeakFeature">
            <summary>
            Speak feature
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityFeatureNames.UnknownFeature">
            <summary>
            Unknown feature, used to indicate a prefixed feature, such as "actions/unknown"
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ActivityFlattener">
            <summary>
            Flattens an activity into known components
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityFlattener.#ctor(Microsoft.Bot.Schema.IActivity)">
            <summary>
            Create a new instance of the ActivityFlattener class
            </summary>
            <param name="activity">Activity to flatten</param>
        </member>
        <member name="P:Microsoft.Bot.Schema.ActivityFlattener.CardActions">
            <summary>
            All card actions found in this activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ActivityFlattener.CardImages">
            <summary>
            All card images found in this activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ActivityFlattener.AnimationCards">
            <summary>
            All animation cards found in this activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ActivityFlattener.AudioCards">
            <summary>
            All audio cards found in this activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ActivityFlattener.BasicCards">
            <summary>
            All basic cards found in this activity (contains hero and thumbnail cards)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ActivityFlattener.HeroCards">
            <summary>
            All hero cards found in this activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ActivityFlattener.MediaCards">
            <summary>
            All media cards found in this activity (contains audio, animation, and video cards)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ActivityFlattener.ReceiptCards">
            <summary>
            All receipt cards found in this activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ActivityFlattener.SigninCards">
            <summary>
            All signin cards found in this activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ActivityFlattener.OAuthCards">
            <summary>
            All OAuth cards found in this activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ActivityFlattener.ThumbnailCards">
            <summary>
            All thumbnail cards found this activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ActivityFlattener.VideoCards">
            <summary>
            All video cards found in this activity
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityFlattener.VisitCardAction(Microsoft.Bot.Schema.CardAction,System.Object)">
            <summary>
            Add a card action
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityFlattener.VisitBasicCard(System.String,Microsoft.Bot.Schema.BasicCard,System.Object)">
            <summary>
            Add a basic card
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityFlattener.VisitMediaCard(System.String,Microsoft.Bot.Schema.MediaCard,System.Object)">
            <summary>
            Add a media card
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityFlattener.VisitReceiptCard(System.String,Microsoft.Bot.Schema.ReceiptCard,System.Object)">
            <summary>
            Add a receipt card
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityFlattener.VisitSigninCard(System.String,Microsoft.Bot.Schema.SigninCard,System.Object)">
            <summary>
            Add a signin card
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityFlattener.VisitOAuthCard(System.String,Microsoft.Bot.Schema.OAuthCard,System.Object)">
            <summary>
            Add an OAuthCard
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ActivityFormatException">
            <summary>
            The supplied Activity does not conform to the expected format
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityFormatException.#ctor">
            <summary>
            Create a new instance of the ActivityFormatException class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Create a new instance of the ActivityFormatException class
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ActivityImportance">
            <summary>
            Defines the importance of an Activity
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityImportance.Low">
            <summary>
            Low importance.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityImportance.Normal">
            <summary>
            Normal importance.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityImportance.High">
            <summary>
            High importance.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ActivityTypes">
            <summary>
            Types of Activities
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityTypes.All">
            <summary>
            All defined activity types
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityTypes.Message">
            <summary>
            Message from a user -> bot or bot -> User
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityTypes.ContactRelationUpdate">
            <summary>
            Bot added removed to contact list
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityTypes.ConversationUpdate">
            <summary>
            This notification is sent when the conversation's properties change, for example the topic name, or when user joins or leaves the group.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityTypes.Typing">
            <summary>
            a user is typing
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityTypes.EndOfConversation">
            <summary>
            Conversation is ending, or a request to end the conversation
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityTypes.Event">
            <summary>
            Asynchronous external event
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityTypes.Invoke">
            <summary>
            Synchronous request to invoke a command
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityTypes.DeleteUserData">
            <summary>
            Delete user data
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityTypes.MessageUpdate">
            <summary>
            An update to an existing Message Activity
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityTypes.MessageDelete">
            <summary>
            Indicates a delete of an existing Message Activity
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityTypes.InstallationUpdate">
            <summary>
            Bot added or removed from channel
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityTypes.MessageReaction">
            <summary>
            Reaction added or removed from activity
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityTypes.Suggestion">
            <summary>
            Suggestion activity - private message 
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityTypes.Trace">
            <summary>
            Trace activity - an internal activity which is logged to trace internal state of the bot
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActivityTypes.Handoff">
            <summary>
            Control of the conversation has been transferred, or a request to transfer control of the conversation
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ActivityVisitor`1">
            <summary>
            An abstract visitor for Activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseActivity(Microsoft.Bot.Schema.IActivity,`0)">
            <summary>
            Traverse an activity. Override this method to traverse activity objects.
            </summary>
            <param name="activity">Activity to traverse</param>
            <param name="state">(Optional) Traversal state</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitActivity(Microsoft.Bot.Schema.IActivity,`0)">
            <summary>
            Override this method to visit activity objects
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseConversationUpdateActivity(Microsoft.Bot.Schema.IConversationUpdateActivity,`0)">
            <summary>
            Override this method to traverse conversation update activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitConversationUpdateActivity(Microsoft.Bot.Schema.IConversationUpdateActivity,`0)">
            <summary>
            Override this method to visit conversation update activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseContactRelationUpdateActivity(Microsoft.Bot.Schema.IContactRelationUpdateActivity,`0)">
            <summary>
            Override this method to traverse contact relationship activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitContactRelationUpdateActivity(Microsoft.Bot.Schema.IContactRelationUpdateActivity,`0)">
            <summary>
            Override this method to visit contact relationship activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseInstallationUpdateActivity(Microsoft.Bot.Schema.IInstallationUpdateActivity,`0)">
            <summary>
            Override this method to traverse installation update activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitInstallationUpdateActivity(Microsoft.Bot.Schema.IInstallationUpdateActivity,`0)">
            <summary>
            Override this method to visit installation update activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseMessageActivity(Microsoft.Bot.Schema.IMessageActivity,`0)">
            <summary>
            Override this method to traverse message activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitMessageActivity(Microsoft.Bot.Schema.IMessageActivity,`0)">
            <summary>
            Override this method to visit message activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseTypingActivity(Microsoft.Bot.Schema.ITypingActivity,`0)">
            <summary>
            Override this method to traverse typing activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitTypingActivity(Microsoft.Bot.Schema.ITypingActivity,`0)">
            <summary>
            Override this method to visit typing activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseEndOfConversationActivity(Microsoft.Bot.Schema.IEndOfConversationActivity,`0)">
            <summary>
            Override this method to traverse end of conversation activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitEndOfConversationActivity(Microsoft.Bot.Schema.IEndOfConversationActivity,`0)">
            <summary>
            Override this method to visit end of conversation activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseEventActivity(Microsoft.Bot.Schema.IEventActivity,`0)">
            <summary>
            Override this method to traverse event activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitEventActivity(Microsoft.Bot.Schema.IEventActivity,`0)">
            <summary>
            Override this method to visit event activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseInvokeActivity(Microsoft.Bot.Schema.IInvokeActivity,`0)">
            <summary>
            Override this method to traverse invoke activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitInvokeActivity(Microsoft.Bot.Schema.IInvokeActivity,`0)">
            <summary>
            Override this method to visit invoke activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseMessageUpdateActivity(Microsoft.Bot.Schema.IMessageUpdateActivity,`0)">
            <summary>
            Override this method to traverse message update activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitMessageUpdateActivity(Microsoft.Bot.Schema.IMessageUpdateActivity,`0)">
            <summary>
            Override this method to visit message update activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseMesasgeDeleteActivity(Microsoft.Bot.Schema.IMessageDeleteActivity,`0)">
            <summary>
            Override this method to traverse message delete activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitMesasgeDeleteActivity(Microsoft.Bot.Schema.IMessageDeleteActivity,`0)">
            <summary>
            Override this method to visit message delete activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseChannelAccountAdded(Microsoft.Bot.Schema.ChannelAccount,`0)">
            <summary>
            Override this method to traverse channel accounts being added in conversation update activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitChannelAccountAdded(Microsoft.Bot.Schema.ChannelAccount,`0)">
            <summary>
            Override this method to visit channel accounts being added in conversation update activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseChannelAccountRemoved(Microsoft.Bot.Schema.ChannelAccount,`0)">
            <summary>
            Override this method to traverse channel accounts being removed in conversation update activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitChannelAccountRemoved(Microsoft.Bot.Schema.ChannelAccount,`0)">
            <summary>
            Override this method to visit channel accounts being removed in conversation update activities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseEntity(Microsoft.Bot.Schema.Entity,`0)">
            <summary>
            Override this method to traverse an entity
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitEntity(Microsoft.Bot.Schema.Entity,`0)">
            <summary>
            Override this method to visit an entity
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseAttachment(Microsoft.Bot.Schema.Attachment,`0)">
            <summary>
            Override this method to traverse an attachment
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitAttachment(Microsoft.Bot.Schema.Attachment,`0)">
            <summary>
            Override this method to visit an attachment
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseBasicCard(System.String,Microsoft.Bot.Schema.BasicCard,`0)">
            <summary>
            Override this method to traverse basic cards (thumbnail and hero cards)
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitBasicCard(System.String,Microsoft.Bot.Schema.BasicCard,`0)">
            <summary>
            Override this method to visit basic cards (thumbnail and hero cards)
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseMediaCard(System.String,Microsoft.Bot.Schema.MediaCard,`0)">
            <summary>
            Override this method to traverse media cards (audio and video cards)
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitMediaCard(System.String,Microsoft.Bot.Schema.MediaCard,`0)">
            <summary>
            Override this method to visit media cards (audio and video cards)
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseReceiptCard(System.String,Microsoft.Bot.Schema.ReceiptCard,`0)">
            <summary>
            Override this method to traverse receipt cards
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitReceiptCard(System.String,Microsoft.Bot.Schema.ReceiptCard,`0)">
            <summary>
            Override this method to visit receipt cards
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseSigninCard(System.String,Microsoft.Bot.Schema.SigninCard,`0)">
            <summary>
            Override this method to traverse signin cards
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitSigninCard(System.String,Microsoft.Bot.Schema.SigninCard,`0)">
            <summary>
            Override this method to visit signin cards
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseOAuthCard(System.String,Microsoft.Bot.Schema.OAuthCard,`0)">
            <summary>
            Override this method to traverse OAuthCards
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitOAuthCard(System.String,Microsoft.Bot.Schema.OAuthCard,`0)">
            <summary>
            Override this method to visit OAuthCards
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseCardAction(Microsoft.Bot.Schema.CardAction,`0)">
            <summary>
            Override this method to traverse card actions
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.VisitCardAction(Microsoft.Bot.Schema.CardAction,`0)">
            <summary>
            Override this method to visit card actions
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ActivityVisitor`1.TraverseAll``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,`0},`0)">
            <summary>
            Traverse all members in an array
            </summary>
            <typeparam name="TItem">Type of members</typeparam>
            <param name="items">Items to traverse</param>
            <param name="action">Traversal call</param>
            <param name="state">(Optional) traversal state</param>
        </member>
        <member name="T:Microsoft.Bot.Schema.AppType">
            <summary>
            Valid type of apps
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.AppType.Bot">
            <summary>
             This app represents a v1 bot
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.AppType.Channel">
            <summary>
            This app represents a channel
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.AppType.MSA">
            <summary>
            This app represents a v3 bot's MSA record
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.App">
            <summary>
            The record to track information about an app
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.App.#ctor">
            <summary>
            Create an instance of the App class
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.App.PRODUCT_BOTS_STARTER">
            <summary>
            Azure API/M product for bots
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.App.PRODUCT_BOTS_UNLIMITED">
            <summary>
            Azure API/M product for bots (without instance cap)
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.App.PRODUCT_CHANNELS_UNLIMITED">
            <summary>
            Azure API/M product for channels
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.App.CreateMsaAppForBot(Microsoft.Bot.Schema.BotService)">
            <summary>
            Create an MSA App record for a bot
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.App.Redact">
            <summary>
            Redact this object
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.App.AppId">
            <summary>
            AppId
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.App.AppKey1">
            <summary>
            AppKey1
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.App.AppKey2">
            <summary>
            AppKey2
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.App.Type">
            <summary>
            What kind of app is this
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.App.Product">
            <summary>
            Product this app is enabled for
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.App.BotId">
            <summary>
            Bot ID (only for v3 bots)
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.Attachment">
            <summary>
            An attachment within an activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Attachment.ContentType">
            <summary>
            mimetype/Contenttype for the file
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Attachment.ContentUrl">
            <summary>
            Content Url 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Attachment.Content">
            <summary>
            Embedded content 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Attachment.Name">
            <summary>
            (OPTIONAL) The name of the attachment
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Attachment.ThumbnailUrl">
            <summary>
            (OPTIONAL) Thumbnail associated with attachment
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Attachment.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Attachment.ContentAs``1">
            <summary>
            convert the content field to the given type
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Attachment.Redact">
            <summary>
            Redact this object.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.AttachmentContent">
            <summary>
            Attachment content returned to a client.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AttachmentContent.Name">
            <summary>
            Name of the attachment.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AttachmentContent.Type">
            <summary>
            ContentType of the attachment
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AttachmentContent.Size">
            <summary>
            Size of the attachment.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AttachmentContent.Content">
            <summary>
            The attachment.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.AttachmentData">
            <summary>
            Attachment data 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AttachmentData.Type">
            <summary>
            Content-Type of the attachment
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AttachmentData.Name">
            <summary>
            Name of the attachment
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AttachmentData.Original">
            <summary>
            Attachment content
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AttachmentData.Thumbnail">
            <summary>
            Attachment thumbnail 
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.AttachmentInfo">
            <summary>
            Metadata for an attachment 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AttachmentInfo.Name">
            <summary>
            Name of the attachment
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AttachmentInfo.Type">
            <summary>
            ContentType of the attachment
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AttachmentInfo.Views">
            <summary>
            attachment views 
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.AttachmentLayoutTypes">
            <summary>
            Attachment layout types
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.AttachmentLayoutTypes.List">
            <summary>
            Show attachments as a list
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.AttachmentLayoutTypes.Carousel">
            <summary>
            Show attachments as a carousel
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.AttachmentView">
            <summary>
            Attachment View name and size
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AttachmentView.ViewId">
            <summary>
            Id of the attachment
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AttachmentView.Size">
            <summary>
            Size of the attachment
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.AuditCaller">
            <summary>
            Represents a caller to a Bot Framework management resource
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.AuditCaller.#ctor(System.String,System.String,System.String)">
            <summary>
            Create a new instance of the AuditCaller class
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AuditCaller.Id">
            <summary>
            ID of this caller, typically user's email address
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AuditCaller.Location">
            <summary>
            Location of this user, typically IP address or machine name
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AuditCaller.Source">
            <summary>
            Source of this audit, e.g. the Bot Framework Dev Portal
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.AzureProvisionInfo">
            <summary>
            Azure bot app provision info
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AzureProvisionInfo.SubscriptionId">
            <summary>
            the subscriptionId this bot app is being provisioned into
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AzureProvisionInfo.Region">
            <summary>
            the geographic region of the resource group this bot app is being provisioned into
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AzureProvisionInfo.ResourceGroupName">
            <summary>
            the resource group name that will host the bot app
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AzureProvisionInfo.Deployment">
            <summary>
            JSON representation of the last checked deployment status
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AzureProvisionInfo.IntegrationDeployment">
            <summary>
            JSON representation of the last checked integrated service deployment status
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AzureProvisionInfo.HostingEnvironment">
            <summary>
            What kind of deployment is the bot app being deployed as (Web App, Functions App, Bot App)
            </summary>        
        </member>
        <member name="P:Microsoft.Bot.Schema.AzureProvisionInfo.SourceRepoUrl">
            <summary>
            optional source repository url of the bot app template
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AzureProvisionInfo.SiteName">
            <summary>
            the siteName of the bot app, which is part of the hostname part of bot endpoint url
            {siteName}.azurewebsites.net 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AzureProvisionInfo.ServerFarm">
            <summary>
            if this is about a server farm, then the name of server farm
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AzureProvisionInfo.TenantId">
            <summary>
            the azure tenant where the bot service is provisioned, this is needed for user
            who are member of multiple azure directories.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AzureProvisionInfo.BotRunTimeVersion">
            <summary>
            Semantic version stamp of Bot run time 
            examples "*" for latest version
            ~0.3 for specific dot version
            ^0.5 for specific major version
            0.3.4 for specific bot runtime version
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.AzureProvisionInfo.ServerFarmId">
            <summary>
            if null or empty this uses the default 'Consumption' server farm
            if set, this is the dedicated server farm resourceId the user wants to put
            the bot in
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.BotData">
            <summary>
            Public facing bot data
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotData.Data">
            <summary>
            State data
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.BotHistory">
            <summary>
            A publication event for a bot
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.BotHistory.PublishEvent">
            <summary>
            Kind of bot publish event
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotHistory.PublishEvent.SUBMIT">
            <summary>
            Bot was submitted for review
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotHistory.PublishEvent.UNSUBMIT">
            <summary>
            Bot was removed from submission for review
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotHistory.PublishEvent.INREVIEW">
            <summary>
            Bot is in review
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotHistory.PublishEvent.REJECT">
            <summary>
            Bot was rejected by reviewer
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotHistory.PublishEvent.ACCEPT">
            <summary>
            Bot was accepted by reviewer
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotHistory.PublishEvent.FEATURED">
            This has been discontinued, but removing it would change the enumerated values and break reviews
        </member>
        <member name="F:Microsoft.Bot.Schema.BotHistory.PublishEvent.UNFEATURED">
            This has been discontinued, but removing it would change the enumerated values and break reviews
        </member>
        <member name="F:Microsoft.Bot.Schema.BotHistory.PublishEvent.SCANNING">
            <summary>
            Bot was sent to CVS for scanning.
            </summary>
            <remarks>
            SLA for CVS auto-scan is 2 hours, but most scans finish within a minute
            </remarks>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotHistory.PublishEvent.SCANNED">
            <summary>
            CVS scan finished
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotHistory.PublishEvent.DELETED">
            <summary>
            Bot was deleted
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotHistory.PublishEvent.SCANFAILED">
            <summary>
            CVS scan job failed and must be resubmitted
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotHistory.IsReviewerEvent(Microsoft.Bot.Schema.BotHistory.PublishEvent)">
            <summary>
            True if this the history event can be created only by reviewers
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotHistory.#ctor">
            <summary>
            Create a new instance of the BotHistory object
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotHistory.#ctor(System.String,Microsoft.Bot.Schema.BotHistory.PublishEvent,System.String,System.String,System.String)">
            <summary>
            Create a new instance of the BotHistory object
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotHistory.BotId">
            <summary>
            Bot ID
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotHistory.Type">
            <summary>
            Type of Bot history publish event
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotHistory.Comment">
            <summary>
            Comments for event
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotHistory.User">
            <summary>
            User who sumbitted the change
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotHistory.When">
            <summary>
            When change was submitted
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotHistory.Channel">
            <summary>
            Channel ID that this change is for
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotHistory.SubmitDate">
             <summary>
             When the submit event happened, if this was a submit event
             </summary>
             If this is the LastestEvent document, this will be used.
            
        </member>
        <member name="P:Microsoft.Bot.Schema.BotHistory.ReviewDate">
            <summary>
            When the review event happened
            </summary>
            /// This is redundant with the When field, but needed for sorting
            
        </member>
        <member name="P:Microsoft.Bot.Schema.BotHistory.PublisherEmail">
            <summary>
            Email of the publisher
            </summary>
            
        </member>
        <member name="P:Microsoft.Bot.Schema.BotHistory.BotName">
            <summary>
            Name of the bot 
            </summary>
            
        </member>
        <member name="P:Microsoft.Bot.Schema.BotHistory.SubmittedBy">
            <summary>
            If this is the LatestEvent document, this should always be filled in.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotHistory.NormalizedBotId">
            <summary>
            Bot ID - normalized for searching
            </summary>
             [JsonIgnore]
        </member>
        <member name="T:Microsoft.Bot.Schema.BotOptions">
            <summary>
            Options for a bot, stored in BotService
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotOptions.None">
            <summary>
            No services desired
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotOptions.AllMessages">
            <summary>
            If this is turned on, all messages for the bot will be routed to the bot, regardless if the bot is mentioned or not
            This is useful for "listening" bots that listen in to a conversation. If this is not turned on, then
            messages wills be routed if they are 1:1 or they mention the bot
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotOptions.AutoTranslate">
            <summary>
            Translate channel messages
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotOptions.DisableLogging">
            <summary>
            Disable logging
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotOptions.DisableMentionStripping">
            <summary>
            Disable automatic stripping of Mention text
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.BotService">
            <summary>
            The record to track information about a bot
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotService.IconContainer">
            <summary>
            Name for Azure blob icon container
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotService.ManifestContainer">
            <summary>
            Name for Azure blob manifest container
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.#ctor">
            <summary>
            Create an instance of the BotService class
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.MsaAppId">
            <summary>
            MSA App ID for this bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.ProvisionInfo">
            <summary>
            Azure provisioning information
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.OwnerIds">
            <summary>
            Email addresses of the developers that own this bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.Hashtags">
            <summary>
            Hashtags for this bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.Publisher">
            <summary>
            Publisher of this bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.PublisherEmail">
            <summary>
            Email address of the publisher of this bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.Website">
            <summary>
            Bot's published website
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.Endpoint">
            <summary>
            Bot's webhook endpoint
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.Version">
            <summary>
            Version of the protocol/schema this bot supports 1.0/3.0
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.Endpoints">
            <summary>
            List of endpoints that the bot developer has configured
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.IconUrl">
            <summary>
            Icon Url for bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.Description">
            <summary>
            Description of the bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.EnabledChannels">
            <summary>
            List of channels enabled and configured by the bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.ConfiguredChannels">
            <summary>
            List of channels configured for the bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.ListedChannels">
            <summary>
            Channels that the bot builder has chosen to list in the bot directory bot details
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.ListedMarkets">
            <summary>
            Markets that the bot builder has chosen to list in the bot directory
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.Listed">
            <summary>
            True if the bot is listed in the Bot Directory
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.Submitted">
            <summary>
            True if the developer submitted this bot for review
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.DefaultIconColorHash">
            <summary>
            Color theme hash for the default icon image
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.Contacts">
            <summary>
            List of contact addresses for this bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.FeaturedDisplayOrder">
            <summary>
            Allow admin to set the display order of featured bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.DeveloperAppInsightKey">
            <summary>
            (Optional) Application Insights where tracing data will be sent
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.DeveloperAppInsightsAPIKey">
            <summary>
            (Optional) User-generated Application Insights API key for generating bot analytics.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.DeveloperAppInsightsApplicationId">
            <summary>
            (Optional) Application Insights applicationId for reading telemetry and generating analytics.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.DeveloperBotPrivacyUrl">
            <summary>
            (Optional) Privacy policy URL
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.DeveloperBotTermsOfUseUrl">
            <summary>
            (Optional) Terms of use URL
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.CortanaProperties">
            <summary>
            Cortana-specific properties
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.ManifestUrl">
            <summary>
            Manifest Blob Url for bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.Actions">
            <summary>
            List of Actions that the bot performs (as definted in the bot manifest).
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.LUISAppIds">
            <summary>
            List of LUIS app IDs associated with this bot
            </summary>
            <remarks>
            This property is used for SR priming
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.LUISKey">
            <summary>
            A cached copy of the LUIS Programmatic API key
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.BotStateTable">
            <summary>
            The active state table for the bot
            </summary>
            <remarks>
            The current active store for the StateAPI for the bot
               null = "legacy"
               Slot#= botstatestoreX where X = consistentHash(botStateStoreCount, botId) 
               Connectionstring = custom table storage
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.BotStatePriorTable">
            <summary>
            The prior state store for the bot
            </summary>
            <remarks>
            The prior state store for a bot, if non-null, then data will be double read from this store and primary store
            	null - no migration source
                "legacy" = V3 partitionkey from connectorprod
                connectionString = from specific table
                Slot# = record from bostateprod[slot#]
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.BotServiceRuntimeVersion">
            <summary>
            Runtime for this bot (ABS v1, ABS v2, Custom)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.ThrottlePolicy">
            <summary>
            (Optional) The throttle policy for this bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.IsSubscriptionDisabled">
            <summary>
            (Required, eventually). A flag to determine if Azure has deemed this resource delinquent or not (i.e. they haven't paid their bill then this is true)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.ServicePlan">
            <summary>
            (Required, eventually). Either S1 or Free service plan.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.SubscriptionId">
            <summary>
            (Required, eventually). The Azure subscription id of the BotService
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.ResourceGroupName">
            <summary>
            (Required, eventually). The Azure resource group name of the BotService
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.Region">
            <summary>
            (Required, eventually). The Azure region of the BotService
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.AzureTags">
            <summary>
            The Azure ARM Tags of the BotService
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.AcceptedTermsOfService">
            <summary>
            Terms of Service that have been accepted
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.ExceededMeters">
            <summary>
            (Required, eventually). A list of Billing Meter Ids where the monthly quota has been exceeded.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.Kind">
            <summary>
            Kind of bot as received. Possible values could be 'designer', 'sdk', 'bot' or 'function' 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.MigratedDate">
            <summary>
            UTC time stamp of successful migration to ABS GA
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.ProvisioningState">
            <summary>
            Provisioning state of the resource
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.IsStateStoreProhibited">
            <summary>
            A flag to determine if the bot is prohibited from using the bot state store
            This flag should be set for newly created bots
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.IsStreamingSupported">
            <summary>
            A flag to determine if the bot supports the streaming protocol
            By default all bots do not support the streaming protocol unless explicitly set
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotService.ApprovedForBotDirectory">
            <summary>
            True if bot is approved for bot directory
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.AddExceededMeter(System.String,System.DateTime)">
            <summary>
            Add an exceeded meter
            </summary>
            <param name="meterId">ID of the meter to add</param>
            <param name="expires">When the record expires</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.RemoveExceededMeter(System.String)">
            <summary>
            Remove an exceeded meter
            </summary>
            <param name="meterId"></param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.IsMeterQuotaExceeded(System.String)">
            <summary>
            Returns true if the given meter's quota is exceeded
            </summary>
            <param name="meterId">The Meter ID to check</param>
            <returns>true if quota is exceeded</returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.GetMeterResetDate(System.String)">
            <summary>
            Returns a DateTime of when a meter will be reset if the given meter's quota is exceeded
            </summary>
            <param name="meterId">The Meter ID to check</param>
            <returns>A DateTime of when the meter will reset if quota is exceeded</returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.AddOwner(System.String)">
            <summary>
            Add a channel for a bot
            </summary>
            <param name="ownerId">channelId to enable</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.RemoveOwner(System.String)">
            <summary>
            disable channel
            </summary>
            <param name="ownerId">channelid to disable</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.AddContact(Microsoft.Bot.Schema.ContactType,System.String,System.String,System.String,System.String)">
            <summary>
            Add a contact record for a bot, or an Add to channel
            </summary>
            <param name="contactType">the contact type</param>
            <param name="channelId">channelId</param>
            <param name="address">Global address for the bot, if available</param>
            <param name="name">name of the bot on this channel</param>
            <param name="htmlLink">Html link which either sends data to the bot's global address or is a button to add the bot to the channel</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.GetContact(Microsoft.Bot.Schema.ContactType,System.String)">
            <summary>
            Get the contact info for the given channel.
            </summary>
            <param name="contactType">the contact type</param>
            <param name="channelId">channelId</param>
            <returns>Contact info or null if there is no contact info.</returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.TransformContact(System.String,System.String,System.Func{Microsoft.Bot.Schema.ContactInfo,Microsoft.Bot.Schema.ContactInfo})">
            <summary>
            Transform a contact record on the bot
            </summary>
            <param name="channelId">Channel ID for the contact record</param>
            <param name="address">Address within the channel to transform</param>
            <param name="transform">Transformation to apply</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.RemoveContact(Microsoft.Bot.Schema.ContactType,System.String)">
            <summary>
            Remove a channel contact for the bot
            </summary>
            <param name="contactType">the contact type</param>
            <param name="channelId">channelId</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.IsBlocked">
            <summary>
            True if the bot is blocked
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.IsFeatured">
            <summary>
            True if the bot is featured in the Bot Directory
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.IsConfiguredForChannel(System.String)">
            <summary>
            True if the bot is configured on this channel
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.IsEnabledForChannel(System.String)">
            <summary>
            True if the bot is enabled on this channel
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.EnableChannel(System.String)">
            <summary>
            Enable a channel for a bot
            </summary>
            <param name="channelId">channelId to enable</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.DisableChannel(System.String)">
            <summary>
            disable channel
            </summary>
            <param name="channelId">channelid to disable</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.ListChannel(System.String)">
            <summary>
            list channel in the bot directory
            </summary>
            <param name="channelId"></param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.UnlistChannel(System.String)">
            <summary>
            unlist channel in the bot directory
            </summary>
            <param name="channelId"></param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.AddTermOfService(System.String)">
            <summary>
            Add a new TOS to the list of TOS's that have been accepted
            </summary>
            <param name="tos">Term of Service to add</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.RemoveTermOfService(System.String)">
            <summary>
            Remove a TOS from the list of TOS's that have been accepted
            </summary>
            <param name="tos">Term of Service to remove</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.IsTermOfServiceAgreedTo(System.String)">
            <summary>
            Check if a TOS has been accepted
            </summary>
            <param name="tos">Term of Service to check</param>
            <returns>True if accepted</returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.ConfigureChannel(System.String)">
            <summary>
            Configure a channel for a bot
            </summary>
            <param name="channelId">Channel ID to configure</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.UnconfigureChannel(System.String)">
            <summary>
            Unconfigure a channel for a bot
            </summary>
            <param name="channelId">Channel ID to unconfigure</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.IsMigratedToAzure">
            <summary>
            Determines whether the current bot service was migrated to azure
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.IsMigrationOptional">
            <summary>
            Determines whether the current bot service needs to be migrated to azure
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.PatchFrom(Microsoft.Bot.Schema.BotService,System.Boolean)">
            <summary>
            Merge bot service properties into current bot service. Only members that we allow changing that have values are merged.
            </summary>
            <remarks>
            This is like a patch operation - null properties on the botService are ignored, only properties with values are modified.
            </remarks>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotService.ReferenceGrammarIdUUIDNamespace">
            <summary>
            Namespace for the Reference Grammar ID UUIDs
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.CalculateReferenceGrammarId(System.String)">
            <summary>
            Calculate the reference grammar ID from the bot's ID
            </summary>
            <remarks>
            A bot's reference grammar ID is a version 5 UUID using 616a4509-5e27-429a-8526-4cf4ce3b051d
            as the namespace and the UTF-8-encoded bot ID as the name. See RFC4122 for details. https://tools.ietf.org/html/rfc4122
            
            In order to not poke code scanning tools, we modify the version 5 algo to use SHA256 instead of SHA1.
            Otherwise the conventions are the same.
            </remarks>
            <param name="botId">Bot ID</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotService.KindToBotVersion(System.String)">
            <summary>
            Determine the service runtime version of a bot based on its kind
            </summary>
            <param name="kind"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Bot.Schema.BotVersion">
            <summary>
            Bot Framework versions
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotVersion.API_V1">
            <summary>
            v1.0 (March 2016) version of the Bot Connector protocol
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotVersion.API_V3">
            <summary>
            v3 (June 2016) version of the Bot Connector protocol
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotVersion.Custom">
            <summary>
            Custom (bots not using the Azure Bot Service)
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotVersion.ABS_V1">
            <summary>
            Azure Bot Service v1
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotVersion.ABS_V2">
            <summary>
            Azure Bot Service v2
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.BotVersion.ABS_Code">
            <summary>
            Azure Bot Service as web app service
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ActionTypes">
            <summary>
            Defines action types for clickable buttons.
            </summary>
            <remarks>
            Each type describes the meaning of the button and its behavior when the button is activated.
            </remarks>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActionTypes.All">
            <summary>
            Contains all of the defined action types.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActionTypes.OpenUrl">
            <summary>
            Open the supplied URL in the built-in browser
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActionTypes.ImBack">
            <summary>
            Send a message to the bot, as if the user typed a message.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActionTypes.PostBack">
            <summary>
            Send a message to the bot, with no requirement on how the channel displays the contents of the message.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActionTypes.PlayAudio">
            <summary>
            Open an audio playback container for the supplied URL.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActionTypes.PlayVideo">
            <summary>
            Open a video playback container for the supplied URL.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActionTypes.ShowImage">
            <summary>
            Show an image referenced by URL.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActionTypes.DownloadFile">
            <summary>
            Download a file referenced by URL.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActionTypes.Signin">
            <summary>
            Prompt the user to sign in.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActionTypes.Call">
            <summary>
            Initiate a call.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActionTypes.Payment">
            <summary>
            Initiate a payment.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ActionTypes.MessageBack">
            <summary>
            Send a message to the bot. Combines features of the ImBack and PostBack action types.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.AnimationCard">
            <summary>
            An animation card (Ex: gif or short video clip)
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.AnimationCard.ContentType">
            <summary>
            Content-type for an animation card
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.AudioCard">
            <summary>
            Audio card
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.AudioCard.ContentType">
            <summary>
            Content-type for audio cards
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.BasicCard">
            <summary>
            A basic card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BasicCard.Title">
            <summary>
            Title of the card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BasicCard.Subtitle">
            <summary>
            Subtitle of the card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BasicCard.Text">
            <summary>
            Text for the card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BasicCard.Images">
            <summary>
            Array of images for the card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BasicCard.Buttons">
            <summary>
            Set of actions applicable to the current card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BasicCard.Tap">
            <summary>
            This action will be activated when user taps on the card itself
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BasicCard.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.CardAction">
            <summary>
            A clickable action
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.CardAction.Type">
            <summary>
            The type of action implemented by this button
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.CardAction.Title">
            <summary>
            Text description which appears on the button
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.CardAction.Image">
            <summary>
            Image URL which will appear on the button, next to text label
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.CardAction.Text">
            <summary>
            Text for this action
            </summary>
            <remarks>
            This property is not supported on all actions
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.CardAction.DisplayText">
            <summary>
            (Optional) text to display in the chat feed if the button is clicked
            </summary>
            <remarks>
            This property is not supported on all actions
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.CardAction.Value">
            <summary>
            Supplementary parameter for action. Content of this property depends on the ActionType
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.CardAction.ChannelData">
            <summary>
            Channel-specific data associated with this action
            </summary>
            <remarks>
            The schema and content of this property are defined by the channel where the action is sent.
            </remarks>
        </member>
        <member name="T:Microsoft.Bot.Schema.CardImage">
            <summary>
            An image on a card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.CardImage.Url">
            <summary>
            URL thumbnail image for major content property
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.CardImage.Alt">
            <summary>
            Image description intended for screen readers
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.CardImage.Tap">
            <summary>
            Action assigned to specific Attachment
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.CardImage.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.Fact">
            <summary>
            Set of key-value pairs. Advantage of this section is that key and value properties will be 
            rendered with default style information with some delimiter between them. So there is no need for developer to specify style information.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Fact.Key">
            <summary>
            The key for this Fact
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Fact.Value">
            <summary>
            The value for this Fact
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Fact.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.HeroCard">
            <summary>
            A Hero card (card with a single, large image)
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.HeroCard.ContentType">
            <summary>
            Content-type for a Hero card
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ThumbnailUrl">
            <summary>
            Thumbnail URL
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ThumbnailUrl.Url">
            <summary>
            URL pointing to the thumbnail to use for media content
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ThumbnailUrl.Alt">
            <summary>
            HTML alt text to include on this thumbnail image
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.MediaUrl">
            <summary>
            Media URL
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MediaUrl.Url">
            <summary>
            Url for the media
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MediaUrl.Profile">
            <summary>
            Optional profile hint to the client to differentiate multiple MediaUrl objects from each other
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.MediaCard">
            <summary>
            Media card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MediaCard.Title">
            <summary>
            Title of this card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MediaCard.Subtitle">
            <summary>
            Subtitle of this card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MediaCard.Text">
            <summary>
            Text of this card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MediaCard.Image">
            <summary>
            Thumbnail placeholder
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MediaCard.Media">
            <summary>
            Media URLs for this card. When this field contains more than one URL, each URL is an alternative format of the same content.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MediaCard.Buttons">
            <summary>
            Actions on this card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MediaCard.Shareable">
            <summary>
            This content may be shared with others (default:true)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MediaCard.Autoloop">
            <summary>
            Should the client loop playback at end of content (default:true)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MediaCard.Autostart">
            <summary>
            Should the client automatically start playback of media in this card (default:true)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MediaCard.Aspect">
            <summary>
            Aspect ratio of thumbnail/media placeholder. Allowed values are "16:9" and "4:3"
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MediaCard.Duration">
            <summary>
            Describes the length of the media content without requiring a receiver to open the content. Formatted as an ISO 8601 Duration field.
            </summary>
            <remarks>
            Example:
              Content is 1 minute and 24 seconds
              
              "duration": "PT1M24S"
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.MediaCard.Value">
            <summary>
            Supplementary parameter for this card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MediaCard.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.OAuthCard">
            <summary>
            A card representing a request to perform a sign in via OAuth
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.OAuthCard.ContentType">
            <summary>
            Content-type for a OAuthCard
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OAuthCard.Text">
            <summary>
            Text for signin request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OAuthCard.ConnectionName">
            <summary>
            The name of the registered connection
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OAuthCard.Buttons">
            <summary>
            Action to use to perform signin
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OAuthCard.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.Rating">
            <summary>
            A rating
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Rating.Score">
            <summary>
            Score is a floating point number.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Rating.Max">
            <summary>
            Defines maximum score (e.g. 5, 10 or etc). This is mandatory property.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Rating.Text">
            <summary>
            text to be displayed next to the score
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Rating.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ReceiptCard">
            <summary>
            A receipt card
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ReceiptCard.ContentType">
            <summary>
            Content-type for the Receipt card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReceiptCard.Title">
            <summary>
            Title of the card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReceiptCard.Facts">
            <summary>
            Array of Fact objects
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReceiptCard.Items">
            <summary>
            Array of Receipt Items
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReceiptCard.Tap">
            <summary>
            This action will be activated when user taps on the card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReceiptCard.Total">
            <summary>
            Total amount of money paid (or to be paid)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReceiptCard.Tax">
            <summary>
            Total amount of tax paid (or to be paid)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReceiptCard.Vat">
            <summary>
             Total amount of VAT paid (or to be paid)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReceiptCard.Buttons">
            <summary>
            Set of actions applicable to the current card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReceiptCard.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ReceiptItem">
            <summary>
            An item on a receipt card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReceiptItem.Title">
            <summary>
             Title of the Card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReceiptItem.Subtitle">
            <summary>
            Subtitle appears just below Title field, differs from Title in font styling only
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReceiptItem.Text">
            <summary>
            Text field appears just below subtitle, differs from Subtitle in font styling only
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReceiptItem.Image">
            <summary>
            Image 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReceiptItem.Price">
            <summary>
            Amount with currency
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReceiptItem.Quantity">
            <summary>
            Number of items of given kind
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReceiptItem.Tap">
            <summary>
            This action will be activated when user taps on the Item bubble.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReceiptItem.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.SigninCard">
            <summary>
            A card representing a request to sign in
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.SigninCard.ContentType">
            <summary>
            Content-type for a Signin card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.SigninCard.Text">
            <summary>
            Text for signin request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.SigninCard.Buttons">
            <summary>
            Action to use to perform signin
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.SigninCard.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ThumbnailCard">
            <summary>
            A thumbnail card (card with a single, small thumbnail image)
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ThumbnailCard.ContentType">
            <summary>
            Content-type for a Thumbnail card
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.VideoCard">
            <summary>
            Video card
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.VideoCard.ContentType">
            <summary>
            Content-type for video cards
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ChannelAccount">
            <summary>
            Channel account information needed to route a message 
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ChannelAccount.#ctor(System.String)">
            <summary>
            Create an instance of the ChannelAccount class
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelAccount.Id">
            <summary>
            Channel id for the user or bot on this channel (Example: joe@smith.com, or @joesmith or 123456)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelAccount.Name">
            <summary>
            Display friendly name 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelAccount.AadObjectId">
            <summary>
            This account's object ID within Azure Active Directory (AAD)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelAccount.Role">
            <summary>
            Role of the entity behind the account (Example: User, Bot, etc.)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelAccount.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ChannelAccount.Redact">
            <summary>
            Get redacted version of this object.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ChannelAccountInfo">
            <summary>
            A user's or bot's account within a channel
            </summary>
            <remarks>
            This object represents a user's or a bot's contact information within a channel. For example, in
            the email channel, the Address field contains an email address.
            </remarks>
        </member>
        <member name="M:Microsoft.Bot.Schema.ChannelAccountInfo.#ctor">
            <summary>
            Create an instance of the ChannelAccountInfo class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ChannelAccountInfo.#ctor(System.String,System.String)">
            <summary>
            Create an instance of the ChannelAccountInfo class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ChannelAccountInfo.#ctor(Microsoft.Bot.Schema.V1.ChannelAccount)">
            <summary>
            Create an instance of the ChannelAccountInfo class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ChannelAccountInfo.ToChannelAccount">
            <summary>
            Generate a ChannelAccount object from this ChannelAccountInfo
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ChannelAccountInfo.Redact">
            <summary>
            Get a redacted version of this object
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelAccountInfo.ChannelId">
            <summary>
            Channel ID
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelAccountInfo.Address">
            <summary>
            Address within the channel
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelAccountInfo.Name">
            <summary>
            Display name within the channel
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelAccountInfo.Id">
            <summary>
            Bot Framework Handle
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelAccountInfo.IsBot">
            <summary>
            True if this account represents a bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelAccountInfo.Secret">
            <summary>
            Secret key used to encrypt any data associated with this account within the Bot Framework system
            </summary>
            <remarks>
            This value is only used by services run by the core Bot Framework team.
            </remarks>
        </member>
        <member name="T:Microsoft.Bot.Schema.CheckFeatureEnabledResponse">
            <summary>
            Contract for the response body in response to a check if a feature is enabled for a bot request.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.CheckFeatureEnabledResponse.IsEnabled">
            <summary>
            Whether the requested feature is enabled or not.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.CheckFeatureEnabledResponse.Message">
            <summary>
            An optional message with details about the feature enabled check
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.CheckNameAvailabilityRequest">
            <summary>
            Contract for the request body for a check availability request.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.CheckNameAvailabilityRequest.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.CheckNameAvailabilityRequest.Type">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.CheckNameAvailabilityResponse">
            <summary>
            Contract for the response body in response to a check availability request.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.CheckNameAvailabilityResponse.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.CheckNameAvailabilityResponse.Message">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ContactType">
            <summary>
            Public contact type
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.Email">
            <summary>
            Address can be contacted over email
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.GroupMe">
            <summary>
            Address can be contacted on GroupMe
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.Kik">
            <summary>
            Address can be contacted on Kik
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.PhoneNumber">
            <summary>
            Address can be contacted by telephone or SMS
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.Skype">
            <summary>
            Address can be contacted on Skype
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.Slack">
            <summary>
            Address can be contacted on Slack
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.Telegram">
            <summary>
            Address can be contacted on Telegram
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.Twitter">
            <summary>
            Address can be contacted on Twitter
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.Web">
            <summary>
            Address can be contacted in a web browser
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.API">
            <summary>
            Address can be contacted by API call
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.Facebook">
            <summary>
            Address can be contacted on Facebook
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.MSTeams">
            <summary>
            Address is accessible via Microsoft Teams
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.WeChat">
            <summary>
            Address can be contacted on WeChat
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.SIP">
            <summary>
            Address can be contacted on sip channels like Skype for business
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.Bing">
            <summary>
            (DEPRECATED) Address can be contacted on Bing
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.Kaizala">
            <summary>
            Address can be contacted on Kaizala
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactType.Line">
            <summary>
            Address can be contacted on Line
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ContactInfo">
            <summary>
            Contact record for a bot
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ContactInfo.#ctor(Microsoft.Bot.Schema.V1.ChannelAccount,Microsoft.Bot.Schema.ContactType)">
            <summary>
            Create an instance of the ContactInfo classv
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ContactInfo.#ctor(Microsoft.Bot.Schema.ContactType)">
            <summary>
            Create an instance of the ContactInfo classv
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ContactInfo.#ctor">
            <summary>
            Create an instance of the ContactInfo class
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ContactInfo.ChannelId">
            <summary>
            ChannelId that produced this 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ContactInfo.Address">
            <summary>
            Address displayed in friendly form
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ContactInfo.ContactType">
            <summary>
            Type of contact
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ContactInfo.Name">
            <summary>
            Display Name of the bot on this channel
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ContactInfo.HtmlLink">
            <summary>
            (OPTIONAL) Html Snippet Link for this address, example: tel:4258828080 or mailto:joe@smith.com  or add to slack html snippet 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ContactInfo.Unpublishable">
            <summary>
            channel config site may set this to prevent the channel being published
            in the bot directory
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ContactInfo.UnpublishableReason">
            <summary>
            this explanation/warning shown to the developer when she submit the bot
            for review and when hover over disabled 'publish channel' toggle
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ContactRelationUpdateActionTypes">
            <summary>
            Action types valid for ContactRelationUpdate activities
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactRelationUpdateActionTypes.Add">
            <summary>
            Contact was added
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ContactRelationUpdateActionTypes.Remove">
            <summary>
            Contact was removed
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ConversationAccount">
            <summary>
            Conversation account represents the identity of the conversation within a channel
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ConversationAccount.#ctor(System.String)">
            <summary>
            Create an instance of the ConversationAccount class
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationAccount.IsGroup">
            <summary>
            Indicates whether the conversation contains more than two participants at the time the activity was generated
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationAccount.ConversationType">
            <summary>
            Indicates the type of the conversation in channels that distinguish between conversation types
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationAccount.TenantId">
            <summary>
            This conversation's tenant ID
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ConversationAccount.Redact">
            <summary>
            Get redacted version of this object.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ConversationMembers">
            <summary>
            Conversation and its members
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationMembers.Id">
            <summary>
            Conversation ID
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationMembers.Members">
            <summary>
            List of members in this conversation
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ConversationParameters">
            <summary>
            Parameters for creating a new conversation
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ConversationParameters.#ctor">
            <summary>
            Create an instance of the ConversationParameters class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ConversationParameters.PrepareActivityForNewConversation(System.String,System.String)">
            <summary>
            Prepare activity with conversation information
            </summary>
            <param name="channelId"></param>
            <param name="conversationId"></param>
        </member>
        <member name="M:Microsoft.Bot.Schema.ConversationParameters.Redact">
            <summary>
            Get redacted version of this object.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationParameters.IsGroup">
            <summary>
            IsGroup
            </summary>
            <remarks>
            Set this to true if this is a conversation which could have multiple users added to it
            Set this to false if the conversation is always a 1:1 direct message between a bot and a user
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationParameters.Bot">
            <summary>
            The bot address for this conversation
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationParameters.Members">
            <summary>
            Members to add to the conversation 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationParameters.TopicName">
            <summary>
            (Optional) Topic of the conversation (if supported by the channel)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationParameters.TenantId">
            <summary>
            (Optional) The tenant ID in which the conversation should be created
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationParameters.Activity">
            <summary>
            (Optional) When creating a new conversation, use this activity as the initial message to the conversation
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationParameters.ChannelData">
            <summary>
            Channel specific payload for creating the conversation
            </summary>
            <remarks>
            Some channels allow for additional metadata to provide finer control over the operation; the contents of this property 
            and the meaning is channel specific.
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationParameters.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ConversationReference">
            <summary>
            An object relating to a particular point in a conversation
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationReference.ActivityId">
            <summary>
            (Optional) ID of the activity to refer to
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationReference.User">
            <summary>
            (Optional) User participating in this conversation
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationReference.Bot">
            <summary>
            Bot participating in this conversation
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationReference.Conversation">
            <summary>
            Conversation reference
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationReference.ChannelId">
            <summary>
            Channel ID
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationReference.ServiceUrl">
            <summary>
            Service endpoint where operations concerning the referenced conversation may be performed
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ConversationReference.Redact">
            <summary>
            Redact this object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Bot.Schema.ConversationResourceResponse">
            <summary>
            A response containing a resource
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ConversationResourceResponse.#ctor(System.String)">
            <summary>
            Create a new instance of the ConversationResourceResponse class
            </summary>
            <param name="id">ID of the conversation</param>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationResourceResponse.ActivityId">
            <summary>
            ID of the Activity (if sent)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationResourceResponse.ServiceUrl">
            <summary>
            Service endpoint where operations concerning the conversation may be performed
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ConversationResourceResponse.Redact">
            <summary>
            Get redacted version of this object.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ConversationResourceResponse.CopyNonRedacted(System.Object)">
            <summary>
            Copy the non-redacted properties from nonRedacted to "this".
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ConversationsResult">
            <summary>
            Conversations result
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationsResult.ContinuationToken">
            <summary>
            Paging token
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ConversationsResult.Conversations">
            <summary>
            List of conversations
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.CortanaProperties">
            <summary>
            Properties related to Cortana
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.CortanaProperties.InvocationName">
            <summary>
            Cortana will launch your skill when a user utters an invocation phrase. 
            Invocation phrase must start with "ask", "tell", or "use" followed by your skill's invocation name,
             for example, "ask Contoso Cafe...", "tell Contoso Cafe..."
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.CortanaProperties.ModuleName">
            <summary>
            Module name used to register Cortana skill
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.DeliveryModes">
            <summary>
            Values for deliveryMode field
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.DeliveryModes.Normal">
            <summary>
            Normal delivery mode (default)
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.DeliveryModes.Notification">
            <summary>
            Notification delivery mode
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.DirectLineJwtConfig">
            <summary>
            Values found in Direct Line JWT tokens
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.DirectLineJwtConfig.Claims">
            <summary>
            Custom Direct Line claim types
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.DirectLineJwtConfig.Claims.BotIdClaimType">
            <summary>
            Bot ID claim type
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.DirectLineJwtConfig.Claims.SiteIdClaimType">
            <summary>
            Direct Line Site ID claim type
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.DirectLineJwtConfig.Claims.ConversationIdClaimType">
            <summary>
            Conversation ID claim type
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.DirectLineJwtConfig.Claims.UserIdClaimType">
            <summary>
            User ID claim type
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.DirectLineJwtConfig.Claims.UserNameClaimType">
            <summary>
            User name claim type
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.DirectLineJwtConfig.Claims.Origin">
            <summary>
            Origin claim type
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.DirectLineJwtConfig.Audiences">
            <summary>
            Token audiences
            </summary>
            <remarks>
            Note that these audiences are identifiers, not actual services. https://webchat.botframework.com/ may
            represent the Web Chat channel in any deployment.
            </remarks>
        </member>
        <member name="F:Microsoft.Bot.Schema.DirectLineJwtConfig.Audiences.WebChat">
            <summary>
            Web Chat channel
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.DirectLineJwtConfig.Audiences.DirectLine">
            <summary>
            Direct Line channel
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.DirectLineJwtConfig.Issuers">
            <summary>
            Token issuers
            </summary>
            <remarks>
            Note that these issuers are identifiers, not actual services. https://dev.botframework.com/ may
            represent the dev portal in any deployment.
            </remarks>
        </member>
        <member name="F:Microsoft.Bot.Schema.DirectLineJwtConfig.Issuers.DevPortal">
            <summary>
            Bot Framework developer portal
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.DirectLineJwtConfig.Issuers.DirectLine">
            <summary>
            Direct Line channel (boomerang tokens)
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.DirectLineJwtConfig.Issuers.WebChat">
            <summary>
            Web Chat channel (boomerang tokens)
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.EmailSubscription">
            <summary>
            Information about user's subscription to promotion and updates email
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.EmailSubscription.TermsLatestVersion">
            <summary>
            Current version of terms and condition applicable to users.
            Increasing value on this constant will cause consent dialog to trigger again.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.EmailSubscription.ConsentVersion">
            <summary>
            The last date time when user gave us the consent to send promition and updates.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.EmailSubscription.SubscriptionToken">
            <summary>
            Subscription token used to verify the validity of user subscription.
            This token can be used to unsubscribe a user.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.EmailSubscription.HasConsent">
            <summary>
            Boolean indicating if the user gave us consent.
            User might have rejected the subscription, but even in that case this boolean would be true.
            Value of null or false means user has not been presented with the consent dialog.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.EmailSubscriptionTermsAndConditions">
            <summary>
            The version enumeration for email subscription
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.EmailSubscriptionTermsAndConditions.V1">
            <summary>
            v1 of TOC
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.EmailSubscriptionTermsAndConditions.V2">
            <summary>
            v2 
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.EndOfConversationCodes">
            <summary>
            Codes indicating why a conversation has ended
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.EndOfConversationCodes.All">
            <summary>
            All defined end-of-conversation codes
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.EndOfConversationCodes.Unknown">
            <summary>
            The conversation was ended for unknown reasons
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.EndOfConversationCodes.CompletedSuccessfully">
            <summary>
            The conversation completed successfully
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.EndOfConversationCodes.UserCancelled">
            <summary>
            The user cancelled the conversation
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.EndOfConversationCodes.BotTimedOut">
            <summary>
            The conversation was ended because requests sent to the bot timed out
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.EndOfConversationCodes.BotIssuedInvalidMessage">
            <summary>
            The conversation was ended because the bot sent an invalid message
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.EndOfConversationCodes.ChannelFailed">
            <summary>
            The conversation ended because the channel experienced an internal failure
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.Endpoint">
            <summary>
            A bot's endpoint
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Endpoint.#ctor">
            <summary>
            Create an instance of the Endpoint class
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Endpoint.Version">
            <summary>
            Version of the endpoint
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Endpoint.Url">
            <summary>
            url 
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.GeoCoordinates">
            <summary>
            GeoCoordinates (entity type: "https://schema.org/GeoCoordinates")
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.GeoCoordinates.#ctor">
            <summary>
            Create a new instance of the GeoCoordinates class
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.GeoCoordinates.Elevation">
            <summary>
            Elevation of the location [WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.GeoCoordinates.Latitude">
            <summary>
            Latitude of the location [WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.GeoCoordinates.Longitude">
            <summary>
            Longitude of the location [WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.Mention">
            <summary>
            Mention information (entity type: "mention")
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Mention.#ctor">
            <summary>
            Create a new instance of the Mention class
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Mention.Mentioned">
            <summary>
            The mentioned user
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Mention.Text">
            <summary>
            Sub Text which represents the mention (can be null or empty)
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.Place">
            <summary>
            Place (entity type: "https://schema.org/Place")
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Place.#ctor">
            <summary>
            Constructs a Place
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Place.Address">
            <summary>
            Address of the place (may be `string` or complex object of type `PostalAddress`)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Place.Geo">
            <summary>
            Geo coordinates of the place (may be complex object of type `GeoCoordinates` or `GeoShape`)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Place.HasMap">
            <summary>
            Map to the place (may be `string` (URL) or complex object of type `Map`)
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.Thing">
            <summary>
            Thing (entity type: "https://schema.org/Thing")
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Thing.#ctor(System.String)">
            <summary>
            Construct a thing
            </summary>
            <param name="type"></param>
        </member>
        <member name="P:Microsoft.Bot.Schema.Thing.Type">
            <summary>
            The type of the thing
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Thing.Name">
            <summary>
            The name of the thing
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.Entity">
            <summary>
            Metadata object pertaining to an activity
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Entity.#ctor">
            <summary>
            Create an instance of the Entity class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Entity.#ctor(System.String)">
            <summary>
            Create an instance of the Entity class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Entity.SetProperty``1(``0,System.String)">
            <summary>
            Set a property on this entity
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Entity.GetProperty``1(System.String)">
            <summary>
            Get a property on this entity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Entity.Type">
            <summary>
            Type of this entity (RFC 3987 IRI)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Entity.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Entity.GetAs``1">
            <summary>
            Retrieve internal payload.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Entity.SetAs``1(``0)">
            <summary>
            Set internal payload.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ErrorCodes">
            <summary>
            Error codes to communicate when throwing an APIException
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ErrorCodes.ServiceError">
            <summary>
            Other error, not specified
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ErrorCodes.BadArgument">
            <summary>
            Bad argument
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ErrorCodes.BadSyntax">
            <summary>
            Error parsing request
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ErrorCodes.MissingProperty">
            <summary>
            Mandatory property was not specified
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ErrorCodes.MessageSizeTooBig">
            <summary>
            Message exceeded size limits
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ErrorCodes.TokenExpired">
            <summary>
            Token is expired
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ErrorCodes.BotError">
            <summary>
            The bot generated an error
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ErrorCodes.SubscriptionDisabled">
            <summary>
            The Azure subscription is disabled
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ErrorCodes.Authentication_ExpiredToken">
            <summary>
            from Graph API error codes 
            see https://msdn.microsoft.com/en-us/library/azure/ad/graph/howto/azure-ad-graph-api-error-codes-and-error-handling
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ErrorCodes.Authentication_Unauthorized">
            <summary>
            from Graph API error codes 
            see https://msdn.microsoft.com/en-us/library/azure/ad/graph/howto/azure-ad-graph-api-error-codes-and-error-handling
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ErrorCodes.Authorization_RequestDenied">
            <summary>
            from Graph API error codes 
            see https://msdn.microsoft.com/en-us/library/azure/ad/graph/howto/azure-ad-graph-api-error-codes-and-error-handling
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ErrorCodes.Directory_QuotaExceeded">
            <summary>
            from Graph API error codes 
            see https://msdn.microsoft.com/en-us/library/azure/ad/graph/howto/azure-ad-graph-api-error-codes-and-error-handling
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ErrorCodes.Request_ThrottledPermanently">
            <summary>
            from Graph API error codes 
            see https://msdn.microsoft.com/en-us/library/azure/ad/graph/howto/azure-ad-graph-api-error-codes-and-error-handling
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ErrorCodes.UserBlockedBot">
            <summary>
            The bot was blocked by the user
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ErrorCodes.ServerBusy">
            <summary>
            Server too busy to process request
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ErrorResponse">
            <summary>
            An HTTP API response
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ErrorResponse.#ctor">
            <summary>
            Empty response
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ErrorResponse.#ctor(Microsoft.Bot.Schema.ErrorCodes,System.String)">
            <summary>
            Create an instance of the APIResponse class
            </summary>
            <param name="code">code of error</param>
            <param name="message">Message to send in the HTTP response payload</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.ErrorResponse.#ctor(Microsoft.Bot.Schema.ErrorCodes,System.String,Microsoft.Bot.Schema.InnerHttpError)">
            <summary>
            Create an instance of the APIResponse class
            </summary>
            <param name="code">code of error</param>
            <param name="message">Message to send in the HTTP response payload</param>
            <param name="innerError">Inner error representing the underlying error</param>
        </member>
        <member name="P:Microsoft.Bot.Schema.ErrorResponse.Error">
            <summary>
            Error message
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ErrorResponse.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.Error">
            <summary>
            Object representing error information
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Error.Code">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Error.Message">
            <summary>
            Error message
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Error.InnerHttpError">
            <summary>
            Error from inner http call
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Error.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.InnerHttpError">
            <summary>
            Object representing inner http error
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.InnerHttpError.StatusCode">
            <summary>
            HttpStatusCode from failed request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.InnerHttpError.Body">
            <summary>
            Body from failed request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.InnerHttpError.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ExceededMeter">
            <summary>
            A Billing meter and expiration data
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ExceededMeter.MeterId">
            <summary>
            Billing Meter ID
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ExceededMeter.Expires">
            <summary>
            When this entry expires
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.APIException">
            <summary>
            An exception that indicates any top-level error handlers should generate a corresponding HTTP response
            </summary>
            <remarks>
            APIExceptions are not automatically logged. If the problem causing the exception
            requires a matching log, the code throwing the exception is responsible for creating
            the log entry.
            </remarks>
        </member>
        <member name="M:Microsoft.Bot.Schema.APIException.#ctor(System.Net.HttpStatusCode,Microsoft.Bot.Schema.ErrorCodes,System.String,System.Exception)">
            <summary>
            Create an instance of the APIException class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.APIException.#ctor(System.Net.HttpStatusCode,System.String,System.Exception)">
            <summary>
            Create an instance of the APIException class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.APIException.#ctor(System.Net.HttpStatusCode,System.String,Microsoft.Bot.Schema.InnerHttpError,System.Exception)">
            <summary>
            Create an instance of the APIException class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.APIException.#ctor(System.Net.HttpStatusCode,Microsoft.Bot.Schema.ErrorCodes,System.String,Microsoft.Bot.Schema.InnerHttpError,System.Exception)">
            <summary>
            Create an instance of the APIException class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.APIException.CreateResponse">
            <summary>
            Create a platform/protocol agnostic response object. This should be converted to an appropriate response based
            on the transport protocol.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Bot.Schema.APIException.StatusCode">
            <summary>
            HttpStatusCode to return to caller
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.APIException.Response">
            <summary>
            (Optional) Response body
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.APIException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialize object
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.APIExceptionResponse">
            <summary>
            A class that represents an error that a top-level handler should return as an HTTP response
            </summary>
            <remarks>
            APIExceptionResponse is similar to APIException but is a bare class instead of inheriting from Exception.
            </remarks>
        </member>
        <member name="F:Microsoft.Bot.Schema.APIExceptionResponse.Code">
            <summary>
            The error code.
            </summary>
            <remarks>
            This is an http status code but can be returned, as appropriate, via non-http protocols.
            </remarks>
        </member>
        <member name="F:Microsoft.Bot.Schema.APIExceptionResponse.Error">
            <summary>
            Full error.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.APIExceptionResponse.Reason">
            <summary>
            Summary reason for the error.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.APIExceptionResponse.RetryAfter">
            <summary>
            If caller should retry after a timespan. If 0 then no retry.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.BotException">
            <summary>
            An exception generated by a bot (HTTP failure, timeout, etc.)
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotException.#ctor(System.String,System.Exception)">
            <summary>
            Create a new instance of the BotException class
            </summary>
            <param name="botId">ID of the failing bot</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotException.#ctor(System.String,System.String,System.Nullable{System.Net.HttpStatusCode},System.String,System.Exception)">
            <summary>
            Create a new instance of the BotException class
            </summary>
            <param name="botId">ID of the failing bot</param>
            <param name="correlationId">Correlation ID for this request</param>
            <param name="statusCode">HTTP status code, if returned by bot</param>
            <param name="responseText">HTTP response body, if returned by bot</param>
            <param name="innerException">Inner Exception</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Create a new instance of the BotException class
            </summary>
            <param name="botId">ID of the failing bot</param>
            <param name="message">Message</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotException.BotId">
            <summary>
            ID of the failing bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotException.CorrelationId">
            <summary>
            Correlation ID used in tracing this error
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotException.StatusCode">
            <summary>
            HTTP status code, if returned by bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotException.ResponseText">
            <summary>
            HTTP response body, if returned by the bot
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.BotTimeoutException">
            <summary>
            An attempt to contact a bot timed out
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.BotTimeoutException.#ctor(System.String,System.TimeSpan)">
            <summary>
            Create a new instance of the BotTimeoutException class
            </summary>
            <param name="botId">ID of the failing bot</param>
            <param name="duration">Duration of the request that timed out</param>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotTimeoutException.Duration">
            <summary>
            Duration of the request that timed out
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ChannelException">
            <summary>
            An exception generated by a channel, but triggered by a bot's behavior
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ChannelException.#ctor(System.Net.HttpStatusCode,Microsoft.Bot.Schema.ErrorCodes,System.String,System.Exception)">
            <summary>
            Create a new instance of the ChannelException class
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelException.StatusCode">
            <summary>
            HTTP status code
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelException.ErrorCode">
            <summary>
            Error Code to use for ErrorResponse to developer
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ChannelException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialize object
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.DeveloperException">
            <summary>
            Base class for exceptions that should only be logged to the bot developer's AppInsights logs (NOT logged to Bot Framework internal logs)
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.DeveloperException.#ctor">
            <summary>
            Create a new instance of the DeveloperException class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.DeveloperException.#ctor(System.String)">
            <summary>
            Create a new instance of the DeveloperException class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.DeveloperException.#ctor(System.String,System.Exception)">
            <summary>
            Create a new instance of the DeveloperException class
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.FeatureNames">
            <summary>
            Flightable feature names
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.FeatureNames.BelfastAll">
            <summary>
            The Belfast (Azure Bot Service) feature is enabled, including staging and other templates
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.FeatureNames.DirectLinePerformance">
            <summary>
            The Direct Line performance feature is enabled
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.FeatureNames.DirectLineNoStorage">
            <summary>
            The Direct Line no-storage feature is enabled
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.FeatureNames.DirectLineEndpointParameters">
            <summary>
            The Direct Line endpoint parameters feature is enabled
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.FeatureNames.DirectLineSecureSite">
            <summary>
            The Direct Line Secure endpoints feature is enabled
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.FeatureNames.ConfigPages">
            <summary>
            New configuration pages (May 2017)
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.FeatureNames.SkypeNewConfigPage">
            <summary>
            New Skype config page
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.FeatureNames.WebChatSpeech">
            <summary>
            The speech option is visible in the Web Chat configuration UI
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.FeatureNames.FirstPartyAuth">
            <summary>
            Feature name to enable use of first party auth
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.FeatureNames.AbsGAMigration">
            <summary>
            Allows access to the BotManager/Migrate endpoint
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.FeatureNames.AbsGAWebAppMigration">
            <summary>
            Allows Web App bots to be migrated.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.HostingEnvironment">
            <summary>
            The type of azure resource
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.HostingEnvironment.AzureWebApp">
            <summary>
            Azure web app service
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.HostingEnvironment.AzureFunctions">
            <summary>
            Azure Functions
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.HostingEnvironment.AzureBotApp">
            <summary>
            Specialized bot app kind
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.HostingEnvironment.AzureConversationDesigner">
            <summary>
            Hosted by conversation designer
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.IActivity">
            <summary>
            Shared properties for all activities
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IActivity.Type">
            <summary>
            Activity type
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IActivity.Id">
            <summary>
            ID for the activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IActivity.ServiceUrl">
            <summary>
            Service URL where responses to this activity should be sent
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IActivity.Timestamp">
            <summary>
            Timestamp when this message was sent (UTC)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IActivity.LocalTimestamp">
            <summary>
            Contains the local date and time of the message, expressed in ISO-8601 format.
            For example, 2016-09-23T13:07:49.4714686-07:00.
            </summary>
            <remarks>This should be set by the channel client.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.IActivity.LocalTimezone">
            <summary>
            Contains the name of the local timezone of the message, expressed in IANA Time Zone database format.
            For example, America/Los_Angeles.
            </summary>
            <remarks>This should be set by the channel client.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.IActivity.ChannelId">
            <summary>
            Channel this activity is associated with
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IActivity.From">
            <summary>
            Sender address
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IActivity.Conversation">
            <summary>
            Address for the conversation that this activity is associated with
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IActivity.Recipient">
            <summary>
            Address that received the message
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IActivity.ReplyToId">
            <summary>
            The original ID this activity is a response to
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IActivity.Entities">
            <summary>
            Collection of Entity objects, each of which contains metadata about this activity. Each Entity object is typed.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IActivity.ChannelData">
            <summary>
            Channel-specific payload
            </summary>
            <remarks>
            Some channels will provide channel specific data.
            
            For a message originating in the channel it might provide the original native schema object for the channel. 
            
            For a message coming into the channel it might accept a payload allowing you to create a "native" response for the channel.
            
            Example:
            * Email - The Email Channel will put the original Email metadata into the ChannelData object for outgoing messages, and will accept
            on incoming message a Subject property, and a HtmlBody which can contain Html.  
            
            The channel data essentially allows a bot to have access to native functionality on a per channel basis.
            </remarks>
        </member>
        <member name="M:Microsoft.Bot.Schema.IActivity.AsMessageActivity">
            <summary>
            Return IMessageActivity if this is a message activity, null otherwise
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IActivity.AsContactRelationUpdateActivity">
            <summary>
            Return IContactRelationUpdateActivity if this is a contactRelationUpdate activity, null otherwise
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IActivity.AsInstallationUpdateActivity">
            <summary>
            Return IInstallationUpdateActivity if this is a installationUpdate activity, null otherwise
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IActivity.AsConversationUpdateActivity">
            <summary>
            Return IConversationUpdateActivity if this is a conversationUpdate activity, null otherwise
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IActivity.AsTypingActivity">
            <summary>
            Return ITypingActivity if this is a typing activity, null otherwise
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IActivity.AsEndOfConversationActivity">
            <summary>
            Return IEndOfConversationActivity if this is an end-of-conversation activity, null otherwise
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IActivity.AsEventActivity">
            <summary>
            Returns IEventActivity if this is an event activity, null otherwise
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IActivity.AsInvokeActivity">
            <summary>
            Returns IInvokeActivity if this is an invoke activity, null otherwise
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IActivity.AsMessageUpdateActivity">
            <summary>
            Returns IMessageUpdateActivity if this is a message update activity, null otherwise
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IActivity.AsMessageDeleteActivity">
            <summary>
            Returns IMessageDeleteActivity if this is a message delete activity, null otherwise
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IActivity.AsMessageReactionActivity">
            <summary>
            Returns IMessageDeleteActivity if this is a message delete activity, null otherwise
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IActivity.AsSuggestionActivity">
            <summary>
            Returns ISuggestionActivity if this is a Suggestion activity, null otherwise
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IActivity.AsTraceActivity">
            <summary>
            Returns ITraceActivity if this is a Trace activity, null otherwise
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.IActivityRenderer">
            <summary>
            An implementation that can render an activity into a different form
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IActivityRenderer.ActivityRendererName">
            <summary>
            Name of this activity renderer, used for logging and detecting duplicate renderer registration
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IActivityRenderer.RenderActivityAsync``1(``0,Microsoft.Bot.ChannelConnector.Models.ActivityContext)">
            <summary>
            Render an activity
            </summary>
            <typeparam name="T">Type of activity</typeparam>
            <param name="activity">Activity to render</param>
            <param name="context">Context supporting rendering of this activity</param>
            <returns>Updated activity, or original if no updates were necessary</returns>
            <remarks>
            RenderActivityAsync may perform an in-place update of the activity
            </remarks>
        </member>
        <member name="T:Microsoft.Bot.Schema.IAttachmentStore">
            <summary>
            Methods exposed to store attachments in the channel
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IAttachmentStore.GetAttachmentInfoAsync(Microsoft.Bot.ChannelConnector.Models.APIContext,System.String)">
            <summary>
            Get attachment information object
            </summary>
            <param name="context">Context for this request</param>
            <param name="attachmentId">Attachment ID</param>
            <returns>AttachmentInfo object for this attachment</returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.IAttachmentStore.GetAttachmentUrlAsync(Microsoft.Bot.ChannelConnector.Models.APIContext,System.String,System.String)">
            <summary>
            Get a pre-authorized URL for this attachment
            </summary>
            <param name="context">Context for this request</param>
            <param name="attachmentId">Attachment ID</param>
            <param name="viewId">View to retrieve (original, thumbnail)</param>
            <returns>Pre-authorized URL to attachment</returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.IAttachmentStore.GetAttachmentContentAsync(Microsoft.Bot.ChannelConnector.Models.APIContext,System.String,System.String)">
            <summary>
            Get a stream containing the content for this attachment
            </summary>
            <param name="context">Context for this request</param>
            <param name="attachmentId">Attachment ID</param>
            <param name="viewId">View to retrieve (original, thumbnail)</param>
            <returns>The attachment</returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.IAttachmentStore.UploadAttachmentAsync(Microsoft.Bot.ChannelConnector.Models.AttachmentContext,Microsoft.Bot.Schema.AttachmentData)">
            <summary>
            Upload an attachment
            </summary>
            <param name="attachmentContext">Context for the upload request</param>
            <param name="upload">Content to upload</param>
            <returns>
            Object containing the ID of the uploaded attachment
            </returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.IAttachmentStore.DeleteAttachmentAsync(Microsoft.Bot.ChannelConnector.Models.APIContext,System.String)">
            <summary>
            Delete attachment
            </summary>
            <param name="context">Context for this request</param>
            <param name="attachmentId">Attachment ID</param>
        </member>
        <member name="T:Microsoft.Bot.Schema.IBot">
            <summary>
            Interface in common between BotService record and search BotDocument 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IBot.Id">
            <summary>
            Bot's ID
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IBot.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IBot.Languages">
            <summary>
            What languages does the user or bot speak?
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IBot.OwnerIds">
            <summary>
            User.Ids of developers who own this bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IBot.Hashtags">
            <summary>
            Hashtags for this bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IBot.Publisher">
            <summary>
            Who published it?
            </summary>        
        </member>
        <member name="P:Microsoft.Bot.Schema.IBot.PublisherEmail">
            <summary>
            The email address of the publisher
            </summary>        
        </member>
        <member name="P:Microsoft.Bot.Schema.IBot.IconUrl">
            <summary>
            Icon Url for bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IBot.Description">
            <summary>
            Description of what the bot does
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IBot.EnabledChannels">
            <summary>
            Channels supported by the bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IBot.ListedChannels">
            <summary>
            Channels to show listed by the bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IBot.Listed">
            <summary>
            Should this bot be listed in the gallery?
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IBot.ApprovedForBotDirectory">
            <summary>
            True if the bot is approved for the Bot Directory
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IBot.DefaultIconColorHash">
            <summary>
            The color theme hash for the default icon image
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.IContactRelationUpdateActivity">
            <summary>
            A user has added a bot to their contact list, removed the bot from their contact list, or otherwise changed the relationship between user and bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IContactRelationUpdateActivity.Action">
            <summary>
            add|remove
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.IConversationUpdateActivity">
            <summary>
            The referenced conversation has been updated
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IConversationUpdateActivity.Action">
            <summary>
            Indicates whether the recipient of a contactRelationUpdate was added or removed from the sender's contact list.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IConversationUpdateActivity.MembersAdded">
            <summary>
            Members added to the conversation
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IConversationUpdateActivity.MembersRemoved">
            <summary>
            Members removed from the conversation
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IConversationUpdateActivity.TopicName">
            <summary>
            The conversation's updated topic name
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IConversationUpdateActivity.HistoryDisclosed">
            <summary>
            True if prior history of the channel is disclosed
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.IEndOfConversationActivity">
            <summary>
            Conversation is ending, or a request to end the conversation
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IEndOfConversationActivity.Code">
            <summary>
            Code indicating why the conversation has ended
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IEndOfConversationActivity.Text">
            <summary>
            Content to display when ending the conversation
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.IEventActivity">
            <summary>
            Asynchronous external event
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IEventActivity.Name">
            <summary>
            Name of the event
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IEventActivity.Value">
            <summary>
            Open-ended value 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IEventActivity.RelatesTo">
            <summary>
            Reference to another conversation or activity
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.IFromBotRequest">
            <summary>
            A request received to the channel coming from the bot.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IFromBotRequest.RouteTemplate">
            <summary>
            The route template (ie /v3/conversations/{conversationId}/activities).
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IFromBotRequest.AbsoluteUri">
            <summary>
            The Uri for the request (ie v3/conversations/12345/activities).
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IFromBotRequest.Method">
            <summary>
            The request method (ie GET, POST).
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IFromBotRequest.ClientAgentId">
            <summary>
            The client agent identifier. For HttpRequestMessage this is the UserAgent.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.IHandoffActivity">
            <summary>
            Control of the conversation has been transferred, or a request to transfer control of the conversation
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.IInstallationUpdateActivity">
            <summary>
            A bot was installed or removed from a channel
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IInstallationUpdateActivity.Action">
            <summary>
            add|remove
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.IInvokeActivity">
            <summary>
            Synchronous request to invoke an operation
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IInvokeActivity.Name">
            <summary>
            Name of the operation to invoke
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IInvokeActivity.Value">
            <summary>
            Open-ended value 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IInvokeActivity.RelatesTo">
            <summary>
            Reference to another conversation or activity
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.IMessageActivity">
            <summary>
            A message in a conversation
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IMessageActivity.Locale">
            <summary>
            A locale name for the contents of the text field.
            The locale name is a combination of an ISO 639 two- or three-letter culture code associated with a language
            and an ISO 3166 two-letter subculture code associated with a country or region.
            The locale name can also correspond to a valid BCP-47 language tag.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IMessageActivity.Text">
            <summary>
            The text content of the message.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IMessageActivity.Speak">
            <summary>
            The text to speak.
            </summary>
            <remarks>To control various characteristics of your bot's speech such as voice,
            rate, volume, pronunciation, and pitch, specify the text to speak in
            Speech Synthesis Markup Language (SSML) format.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.IMessageActivity.InputHint">
            <summary>
            Indicates whether your bot is accepting,
            expecting, or ignoring user input after the message is delivered to the client.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IMessageActivity.Summary">
            <summary>
            The text to display if the channel cannot render cards.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IMessageActivity.TextFormat">
            <summary>
            Format of text fields Default:markdown
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IMessageActivity.AttachmentLayout">
            <summary>
            The layout hint for multiple attachments. Default: list.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IMessageActivity.Attachments">
            <summary>
            Attachments
            </summary>
            <remarks>Attachments are used to send and receive simple media attachments (image, audio, video, file) and rich cards.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.IMessageActivity.SuggestedActions">
            <summary>
            The suggested actions for the activity.
            </summary>
            <remarks>Suggested actions are used to present buttons that the user can tap to provide input.
            Unlike buttons that appear within rich cards (which remain visible and accessible to the user even after being tapped),
            buttons that appear within the suggested actions pane will disappear after the user makes a selection.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.IMessageActivity.Importance">
            <summary>
            The importance of the activity.
            </summary>
            <remarks>The default importance is "normal".</remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.IMessageActivity.DeliveryMode">
            <summary>
            A delivery hint to signal to the recipient alternate delivery paths for the activity.
            The default delivery mode is "default".
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IMessageActivity.Expiration">
            <summary>
            The time at which the activity should be considered to be "expired" and should not be presented to the recipient.
            </summary>
            <remarks>This value is serialized as an ISO 8601 encoded datetime string.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.IMessageActivity.ListenFor">
            <summary>
            List of phrases and references that speech and language priming systems should listen for
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IMessageActivity.SemanticAction">
            <summary>
            An optional programmatic action accompanying this request
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IMessageActivity.HasContent">
            <summary>
            True if this activity has text, attachments, or channelData
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IMessageActivity.GetChannelData``1">
            <summary>
            Get channeldata as typed structure
            </summary>
            <typeparam name="TypeT">type to use</typeparam>
            <returns>typed object or default(TypeT)</returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.IMessageActivity.GetMentions">
            <summary>
            Get mentions
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IMessageActivity.Value">
            <summary>
            Value provided with CardAction
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.IMessageDeleteActivity">
            <summary>
            Indicates a delete of an existing Message Activity
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.IMessageReactionActivity">
            <summary>
            A reaction to a Message Activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IMessageReactionActivity.ReactionsAdded">
            <summary>
            Reactions added to the activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.IMessageReactionActivity.ReactionsRemoved">
            <summary>
            Reactions removed from the activity
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.IMessageUpdateActivity">
            <summary>
            An update to an existing Message Activity
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.InputHints">
            <summary>
            Indicates whether the bot is accepting, expecting, or ignoring input
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.InputHints.AcceptingInput">
            <summary> 
            The sender is passively ready for input but is not waiting on a response.
            </summary> 
        </member>
        <member name="F:Microsoft.Bot.Schema.InputHints.IgnoringInput">
            <summary>
            The sender is ignoring input. Bots may send this hint if they are actively processing a request and will ignore input
            from users until the request is complete.
            </summary> 
        </member>
        <member name="F:Microsoft.Bot.Schema.InputHints.ExpectingInput">
            <summary>
            The sender is actively expecting a response from the user.
            </summary> 
        </member>
        <member name="T:Microsoft.Bot.Schema.InstallationUpdateActionTypes">
            <summary>
            Action types valid for InstallationUpdate activities
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.InstallationUpdateActionTypes.Add">
            <summary>
            Bot was added
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.InstallationUpdateActionTypes.Remove">
            <summary>
            Bot was removed
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.InvokeCommands">
            <summary>
            List of commands that can be called in an Invoke activity
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.InvokeCommands.ShippingAddressChange">
            <summary>
            Invoked when the user has changed their shipping address during a Payment Request
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.InvokeCommands.ShippingOptionsChange">
            <summary>
            Invoked when the user has changed their shipping options during a Payment Request
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.InvokeCommands.PaymentResponse">
            <summary>
            Invoked when a Payment Request is completed and has generated a Payment Response
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.Internal.IPortalAPI">
            <summary>
            Interface for talking to portal
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Internal.IPortalAPI.GetBotAsync(System.String)">
            <summary>
            Get the Bot
            </summary>
            <param name="botId">bot id</param>
            <returns>bot</returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.Internal.IPortalAPI.AddBotContactForChannel(System.String,Microsoft.Bot.Schema.ContactType,System.String,System.String,System.String,System.String,Microsoft.Bot.Schema.AuditCaller)">
            <summary>
            Add a contact record for a bot, or an Add to channel
            </summary>
            <param name="botId">botId</param>
            <param name="contactType">the contact type</param>
            <param name="channelId">channelId</param>
            <param name="address">Global address for the bot, if available</param>
            <param name="name">name of the bot on this channel</param>
            <param name="htmlLink">Html link which either sends data to the bot's global address or is a button to add the bot to the channel</param>
            <param name="caller">Caller making this request</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.Internal.IPortalAPI.UpdateBotContactForChannel(System.String,Microsoft.Bot.Schema.ContactType,System.String,System.String,System.String,System.String,Microsoft.Bot.Schema.AuditCaller)">
            <summary>
            Update the bot contact record for a channel
            </summary>
            <param name="botId">botId</param>
            <param name="contactType">the contact type</param>
            <param name="channelId">channelId</param>
            <param name="address">Global address for the bot, if available</param>
            <param name="name">name of the bot on this channel</param>
            <param name="htmlLink">Html link which either sends data to the bot's global address or is a button to add the bot to the channel</param>
            <param name="caller">Caller making this request</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.Internal.IPortalAPI.RemoveBotContactForChannel(System.String,Microsoft.Bot.Schema.ContactType,System.String,System.String,Microsoft.Bot.Schema.AuditCaller)">
            <summary>
            Remove bot contact record for a channel
            </summary>
            <param name="botId">botId</param>
            <param name="contactType">the contact type</param>
            <param name="channelId">channelId</param>
            <param name="address">Global address for the bot, if available</param>
            <param name="caller">Caller making this request</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.Internal.IPortalAPI.SetChannelEnabled(System.String,System.String,System.Boolean,Microsoft.Bot.Schema.AuditCaller)">
            <summary>
            Mark the channel as enalbed or disabled for a bot
            </summary>
            <param name="botId">botId</param>
            <param name="channelId">channelId</param>
            <param name="enable"></param>
            <param name="caller">Caller making this request</param>
        </member>
        <member name="T:Microsoft.Bot.Schema.IRedactable">
            <summary>
            Declares way to create clone of object with private data redacted
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IRedactable.Redact">
            <summary>
            redact private data suitable for logging
            </summary>
            <returns>return cloned and redacted object</returns>
        </member>
        <member name="T:Microsoft.Bot.Schema.IServiceBusListener">
            <summary>
            Listener for Service Bus messages
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IServiceBusListener.OnUnhandledMessageAsync(System.String,System.String)">
            <summary>
            Called when a message is not otherwise handled
            </summary>
            <param name="contentType">Content-type for the message</param>
            <param name="body">Body of the message</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.IServiceBusListener.OnExceptionAsync(System.Exception)">
            <summary>
            Called when an exception occurs when handling a message
            </summary>
            <param name="exception">Exception that was thrown</param>
        </member>
        <member name="T:Microsoft.Bot.Schema.IServiceBusListenerGeneric">
            <summary>
            Listener for Service Bus messages
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IServiceBusListenerGeneric.DispatchAsync(System.String,System.String)">
            <summary>
            Called to dispatch the message to the correct handler
            </summary>
            <param name="name">Name of the Service Bus message</param>
            <param name="body">Body of the Service Bus message</param>
            <returns>True if the message was handled; false otherwise</returns>
        </member>
        <member name="T:Microsoft.Bot.Schema.IServiceBusListener`1">
            <summary>
            Listener for Service Bus messages
            </summary>
            <typeparam name="T">Type of message to receive</typeparam>
        </member>
        <member name="M:Microsoft.Bot.Schema.IServiceBusListener`1.OnMessageAsync(`0)">
            <summary>
            Called to handle a message
            </summary>
            <param name="message">Message to handle</param>
        </member>
        <member name="T:Microsoft.Bot.Schema.IStorage">
            <summary>
            Storage for bot information
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.IStorage.GetBotByMsaAppIdAsync(System.String,System.Boolean)">
            <summary>
            Get a BotService by the bot's MSA App ID
            </summary>
            <param name="msaAppId">MSA App ID</param>
            <param name="useCache">True to use storage's caching system, false to force a lookup from hard storage</param>
            <returns>BotService if found or null if not found</returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.IStorage.GetChannelAccountInfoAsync(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Get a ChannelAccountInfo record for a user or bot
            </summary>
            <param name="channelId">Channel ID</param>
            <param name="address">Address on this channel</param>
            <param name="botId">Bot ID</param>
            <param name="useCache">True to use storage's caching system, false to force a lookup from hard storage</param>
            <returns>ChannelAccountInfo if found or null if not found</returns>
        </member>
        <member name="T:Microsoft.Bot.Schema.ISuggestionActivity">
            <summary>
            SuggestionActivity (Type="suggestion")
            </summary>
            <remarks>
            A suggestion is a private message for the Recipient which can offer a suggestion activity for an activity by ReplyToId property
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.ISuggestionActivity.TextHighlights">
            <summary>
            TextHighlight in the activity represented in the ReplyToId property
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ITraceActivity">
            <summary>
            An activity by which a bot can log internal information into a logged conversation transcript
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ITraceActivity.Name">
            <summary>
            Name of the trace activity 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ITraceActivity.Label">
            <summary>
            Descriptive label for the trace
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ITraceActivity.ValueType">
            <summary>
            Unique string which identifies the format of the value object
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ITraceActivity.Value">
            <summary>
            Open-ended value
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ITraceActivity.RelatesTo">
            <summary>
            Reference to another conversation or activity
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ITypingActivity">
            <summary>
            The From address is typing
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.LanguageCodeAttribute">
            <summary>
            This field must be a valid language code
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.LanguageCodeAttribute.#ctor">
            <summary>
            Create an instance of the LanguageCodeAttribute class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.LanguageCodeAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            True if the field's contents are valid
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.LocaleAttribute">
            <summary>
            This field must be a valid locale
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.LocaleAttribute.#ctor">
            <summary>
            Create an instance of the LocaleAttribute class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.LocaleAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            True if the field's contents are valid
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.LanguageMap">
            <summary>
            Map of language codes to language names
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.LanguageMap.Global">
            <summary>
            Global instance
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.LanguageMap.#ctor">
            <summary>
            Create an instance of the LanguageMap class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.LanguageMap.GetCodeForInput(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Get a language code that matches the input
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.LanguageMap.GetCodeOrFallback(System.String)">
            <summary>
            Get language code or fall back to default value
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.LanguageMap.CodesToNames">
            <summary>
            Dictionary of language codes to language names
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.LanguageMap.NamesToCodes">
            <summary>
            Dictionary of language names to language codes
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.LanguageMap.NamesToNames">
            <summary>
            Dictionary of language names to language names in all languages
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.LanguageMap.Names">
            <summary>
            Names for languages in all languages
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.LocaleCodeAttribute">
            <summary>
            This field must be a valid locale code
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.LocaleCodeAttribute.#ctor">
            <summary>
            Create a new instance of the LocaleCodeAttribute class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.LocaleCodeAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            True if the field's contents are valid
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ManagementActions">
            <summary>
            Actions expressed in a message on the management Service Bus
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ManagementActions.Test">
            <summary>
            Test message
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ManagementActions.BotCreated">
            <summary>
            Bot was created
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ManagementActions.BotUpdated">
            <summary>
            Bot was updated
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ManagementActions.BotDeleted">
            <summary>
            Bot was deleted
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ManagementActions.ChannelEnabled">
            <summary>
            Channel was enabled for bot
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ManagementActions.ChannelDisabled">
            <summary>
            Channel was disabled for bot
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ManagementActions.BotPublishEvent">
            <summary>
            Bot publication was altered
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ManagementActions.BotChannelContactUpdated">
            <summary>
            Bot's contact information was updated
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ManagementActions.BotIntegrityCheck">
            <summary>
            Check the integrity of this bot's registration on this channel
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ManagementMessage">
            <summary>
            A Bot Framework management message sent in the management Service Bus
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ManagementMessage.Name">
            <summary>
            Content-type for this message
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ManagementMessage.Created">
            <summary>
            When this message was created
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ManagementMessage.CorrelationId">
            <summary>
            Id set when message is created and can be used to correlate operation logs. Each message sent should have a unique id.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ManagementMessage.Source">
            <summary>
            Name of service that generated event (usually devportal)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ManagementMessage.ManagementAction">
            <summary>
            Constant from ManagementActions
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ManagementMessage.BotId">
            <summary>
            BotId
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ManagementMessage.MsaAppId">
            <summary>
            MSA AppId 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ManagementMessage.ChannelId">
            <summary>
            ChannelId
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ManagementMessage.Bot">
            <summary>
            Serialized JSON of bot record (type: Microsoft.Bot.Schema.BotService)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ManagementMessage.BotHistory">
            <summary>
            Serialized JSON of corresponding bot history event (type: Microsoft.Bot.Schema.BotHistory)
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ManagementMessage.Redact">
            <summary>
            Redact this object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Bot.Schema.ManagementServiceBus">
            <summary>
            Strings related to the Management Service Bus topic
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ManagementServiceBus.BotTopicName">
            <summary>
            Name of the Management Service Bus topic
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.Action">
            <summary>
            Action that a bot advertises that it can accept.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Action.Id">
            <summary>
            Id for the Action.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Action.ActionDefinition">
            <summary>
            Definition for the advertised action.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ActionDefinition">
            <summary>
            Definition for an Action.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ActionDefinition.Id">
            <summary>
            Id for an Action Definition.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ActionDefinition.Description">
            <summary>
            Description for an Action.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ActionDefinition.Slots">
            <summary>
            SlotDefinitions for an Action
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ActionDefinition.Triggers">
            <summary>
            Triggers for an Action.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.SlotDefinition">
            <summary>
            Slots definining the meaning and desired type of entities.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.SlotDefinition.Name">
            <summary>
            Name associated with a slot.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.SlotDefinition.DesiredType">
            <summary>
            Desired type of a slot.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.TriggerSet">
            <summary>
            Describes a set of conditions for activation, typically in the context of an action definition.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.TriggerSet.Utterances">
            <summary>
            Utterances associated with a trigger.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.UtteranceDefinition">
            <summary>
            Raw data associated with an utterance.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.UtteranceDefinition.Text">
            <summary>
            Raw text associated with the utterance.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.UtteranceDefinition.Locale">
            <summary>
            Locale associated with the utterance.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.UtteranceDefinition.Entities">
            <summary>
            Entities associated with the utterance.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.EntityReference">
            <summary>
            Entity Reference identifies an entity embedded within text.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.EntityReference.Name">
            <summary>
            Name associated with the entity reference.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.EntityReference.StartPosition">
            <summary>
            Start position within the text field in an utterance definition where the first character of the entity is found.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.EntityReference.EndPosition">
            <summary>
            End position within the text field in an utterance definition where the first character of the entity is found.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ManifestMessage">
            <summary>
            A Bot Framework manifest message sent in the management Service Bus
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ManifestMessage.Name">
            <summary>
            Content-type for this message
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ManifestMessage.Created">
            <summary>
            When this message was created
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ManifestMessage.CorrelationId">
            <summary>
            Id set when message is created and can be used to correlate operation logs. Each message sent should have a unique id.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ManifestMessage.Id">
            <summary>
            Id of the Bot.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ManifestMessage.MsaAppId">
            <summary>
            MSA App Id associated with the Bot.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ManifestMessage.Endpoint">
            <summary>
            Messaging Endpoint of the Bot.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ManifestMessage.IconUrl">
            <summary>
            Icon Url of the Bot.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ManifestMessage.Actions">
            <summary>
            Actions associated with the Bot.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ManifestServiceBus">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ManifestServiceBus.ManifestTopicName">
            <summary>
            Name of the Management Service Bus topic
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.MediaEventNames">
            <summary>
            Names for media (audio/video) transport events
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.MediaEventNames.Play">
            <summary>
            The client began playing media
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.MediaEventNames.Resume">
            <summary>
            The client resumed playing media
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.MediaEventNames.Pause">
            <summary>
            The client paused playing media
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.MediaEventNames.Stop">
            <summary>
            The client stopped playing media
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.MediaEventNames.Previous">
            <summary>
            The client skipped to the previous media
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.MediaEventNames.Next">
            <summary>
            The client skipped to the next media
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.MediaEventValue">
            <summary>
            Supplementary parameter for media events
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MediaEventValue.CardValue">
            <summary>
            Callback parameter specified in the Value field of the MediaCard that originated this event
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.MessageReaction">
            <summary>
            Message reaction object
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.MessageReaction.#ctor">
            <summary>
            Create an instance of the MessageReaction class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.MessageReaction.#ctor(System.String)">
            <summary>
            Create an instance of the MessageReaction class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.MessageReaction.SetProperty``1(``0,System.String)">
            <summary>
            Set a property on this object
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.MessageReaction.GetProperty``1(System.String)">
            <summary>
            Get a property on this object
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MessageReaction.Type">
            <summary>
            Message reaction type
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MessageReaction.Properties">
            <summary>
            All properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.MessageReactionTypes">
            <summary>
            Message reaction types
            </summary>
            <remarks>
            Message reactions are an open set. This class contains some common values.
            </remarks>
        </member>
        <member name="F:Microsoft.Bot.Schema.MessageReactionTypes.All">
            <summary>
            All defined activity types
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.MessageReactionTypes.Like">
            <summary>
            Like
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.MessageReactionTypes.PlusOne">
            <summary>
            +1
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ObservedLanguage">
            <summary>
            An observed language
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ObservedLanguage.#ctor">
            <summary>
            Create an instance of the ObservedLanguage class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ObservedLanguage.#ctor(System.String)">
            <summary>
            Create an instance of the ObservedLanguage class
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ObservedLanguage.Language">
            <summary>
            Observed language
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ObservedLanguage.Count">
            <summary>
            Count of observations
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.OpenId.JsonWebKey">
            <summary>
            A JSON Web Key
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OpenId.JsonWebKey.kty">
            <summary>
            Key type
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OpenId.JsonWebKey.use">
            <summary>
            Key use
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OpenId.JsonWebKey.kid">
            <summary>
            Key ID
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OpenId.JsonWebKey.x5t">
            <summary>
            X.509 certificate SHA-1 thumbprint
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OpenId.JsonWebKey.n">
            <summary>
            Key modulus
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OpenId.JsonWebKey.e">
            <summary>
            Key public exponent
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OpenId.JsonWebKey.x5c">
            <summary>
            X.509 certificate chain
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OpenId.JsonWebKey.endorsements">
            <summary>
            Bot Framework endorsements for this key
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.OpenId.JsonWebKeySet">
            <summary>
            A set of JSON Web Keys
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OpenId.JsonWebKeySet.keys">
            <summary>
            Keys
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.OpenId.JsonWebKeySet.Union(Microsoft.Bot.Schema.OpenId.JsonWebKeySet)">
            <summary>
            Return a JsonWebKeySet which contains a union of keys from this set and another set
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.OpenId.OpenIdConfiguration">
            <summary>
            An OpenID configuration
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.OpenId.OpenIdConfiguration.#ctor(System.String,System.String,System.String)">
            <summary>
            Create a new instance of the OpenIdConfiguration class
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OpenId.OpenIdConfiguration.issuer">
            <summary>
            Issuer
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OpenId.OpenIdConfiguration.authorization_endpoint">
            <summary>
            Authorization endpoint
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OpenId.OpenIdConfiguration.jwks_uri">
            <summary>
            URI to JSON Web Keys document
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OpenId.OpenIdConfiguration.id_token_signing_alg_values_supported">
            <summary>
            Supported ID token signing algorithms
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.OpenId.OpenIdConfiguration.token_endpoint_auth_methods_supported">
            <summary>
            Supported token endpoint auth methods
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.PagedMembersResult">
            <summary>
            Page of members.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PagedMembersResult.ContinuationToken">
            <summary>
            Paging token
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PagedMembersResult.Members">
            <summary>
            The Channel Accounts.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.MicrosoftPayMethodData">
            <summary>
            W3C Payment Method Data for Microsoft Pay
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.MicrosoftPayMethodData.MicrosoftPayMethodId">
            <summary>
            Microsoft Pay URI
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MicrosoftPayMethodData.MerchantId">
            <summary>
            Microsoft Pay Merchant ID
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MicrosoftPayMethodData.SupportedNetworks">
            <summary>
            Supported payment networks (e.g., "visa" and "mastercard")
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MicrosoftPayMethodData.SupportedTypes">
            <summary>
            Supported payment types (e.g., "credit")
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.MicrosoftPayMethodData.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.PaymentAddress">
            <summary>
            Address within a Payment Request
            </summary>
            <remarks>
            See https://www.w3.org/TR/payment-request/#paymentaddress-interface
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentAddress.Country">
            <summary>
            This is the CLDR (Common Locale Data Repository) region code. For example, US, GB, CN, or JP
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentAddress.AddressLine">
            <summary>
            This is the most specific part of the address. It can include, for example, a street name, a house number, apartment number, a rural delivery route, descriptive instructions, or a post office box number.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentAddress.Region">
            <summary>
            This is the top level administrative subdivision of the country. For example, this can be a state, a province, an oblast, or a prefecture.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentAddress.City">
            <summary>
            This is the city/town portion of the address.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentAddress.DependentLocality">
            <summary>
            This is the dependent locality or sublocality within a city. For example, used for neighborhoods, boroughs, districts, or UK dependent localities.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentAddress.PostalCode">
            <summary>
            This is the postal code or ZIP code, also known as PIN code in India.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentAddress.SortingCode">
            <summary>
            This is the sorting code as used in, for example, France.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentAddress.LanguageCode">
            <summary>
            This is the BCP-47 language code for the address. It's used to determine the field separators and the order of fields when formatting the address for display.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentAddress.Organization">
            <summary>
            This is the organization, firm, company, or institution at this address.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentAddress.Recipient">
            <summary>
            This is the name of the recipient or contact person.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentAddress.Phone">
            <summary>
            This is the phone number of the recipient or contact person.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentAddress.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.PaymentCurrencyAmount">
            <summary>
            Supplies monetary amounts
            </summary>
            <remarks>
            See https://www.w3.org/TR/payment-request/#paymentcurrencyamount
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentCurrencyAmount.Currency">
            <summary>
            A currency identifier
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentCurrencyAmount.Value">
            <summary>
            Decimal monetary value
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentCurrencyAmount.CurrencySystem">
            <summary>
            Currency system
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentCurrencyAmount.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.PaymentDetails">
            <summary>
            Provides information about the requested transaction
            </summary>
            <remarks>
            See https://www.w3.org/TR/payment-request/#paymentdetails-dictionary
            </remarks>
        </member>
        <member name="F:Microsoft.Bot.Schema.PaymentDetails.ContentType">
            <summary>
            Content-Type for PaymentDetails
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentDetails.Total">
            <summary>
            Contains the total amount of the payment request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentDetails.DisplayItems">
            <summary>
            Contains line items for the payment request that the user agent may display
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentDetails.ShippingOptions">
            <summary>
            A sequence containing the different shipping options for the user to choose from
            </summary>
            <remarks>
            If the sequence is empty, then this indicates that the merchant cannot ship to the current shippingAddress.
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentDetails.Modifiers">
            <summary>
            Contains modifiers for particular payment method identifiers
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentDetails.Error">
            <summary>
            Error description
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentDetails.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.PaymentDetailsModifier">
            <summary>
            Provides details that modify the PaymentDetails based on payment method identifier
            </summary>
            <remarks>
            See https://www.w3.org/TR/payment-request/#paymentdetailsmodifier-dictionary
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentDetailsModifier.SupportedMethods">
            <summary>
            Contains a sequence of payment method identifiers
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentDetailsModifier.Total">
            <summary>
            This value overrides the total field in the PaymentDetails dictionary for the payment method identifiers in the supportedMethods field
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentDetailsModifier.AdditionalDisplayItems">
            <summary>
            Provides additional display items that are appended to the displayItems field in the PaymentDetails dictionary for the payment method identifiers in the supportedMethods field
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentDetailsModifier.Data">
            <summary>
            A JSON-serializable object that provides optional information that might be needed by the supported payment methods
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentDetailsModifier.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.PaymentItem">
            <summary>
            Indicates what the payment request is for and the value asked for
            </summary>
            <remarks>
            See https://www.w3.org/TR/payment-request/#paymentitem-dictionary
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentItem.Label">
            <summary>
            Human-readable description of the item
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentItem.Amount">
            <summary>
            Monetary amount for the item
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentItem.Pending">
            <summary>
            When set to true this flag means that the amount field is not final.
            </summary>
            <remarks>
            Pending is commonly used to show items such as shipping or tax amounts that depend upon selection of shipping address or shipping option.
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentItem.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.PaymentMethodData">
            <summary>
            Indicates a set of supported payment methods and any associated payment method specific data for those methods
            </summary>
            <remarks>
            See https://www.w3.org/TR/payment-request/#idl-def-paymentmethoddata
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentMethodData.SupportedMethods">
            <summary>
            Required sequence of strings containing payment method identifiers for payment methods that the merchant web site accepts
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentMethodData.Data">
            <summary>
            A JSON-serializable object that provides optional information that might be needed by the supported payment methods
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentMethodData.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.PaymentOperations">
            <summary>
            Names for invocable operations in the payment callback protocol
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.PaymentOperations.UpdateShippingAddressOperationName">
            <summary>
            Name for the Update Shipping Address operation invocation
            </summary>
            <remarks>
            This operation accepts a PaymentRequestUpdate object and returns a PaymentRequestUpdateResult object or an error
            </remarks>
        </member>
        <member name="F:Microsoft.Bot.Schema.PaymentOperations.UpdateShippingOptionOperationName">
            <summary>
            Name for the Update Shipping Option operation invocation
            </summary>
            <remarks>
            This operation accepts a PaymentRequestUpdate object and returns a PaymentRequestUpdateResult object or an error
            </remarks>
        </member>
        <member name="F:Microsoft.Bot.Schema.PaymentOperations.PaymentCompleteOperationName">
            <summary>
            Name for the payment completion operation invocation
            </summary>
            <remarks>
            This operation accepts a PaymentRequestComplete object and returns a PaymentRequestCompleteResult object or an error
            </remarks>
        </member>
        <member name="T:Microsoft.Bot.Schema.PaymentOptions">
            <summary>
            Provides information about the options desired for the payment request
            </summary>
            <remarks>
            See https://www.w3.org/TR/payment-request/#paymentoptions-dictionary
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentOptions.RequestPayerName">
            <summary>
            Indicates whether the user agent should collect and return the payer's name as part of the payment request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentOptions.RequestPayerEmail">
            <summary>
            Indicates whether the user agent should collect and return the payer's email address as part of the payment request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentOptions.RequestPayerPhone">
            <summary>
            Indicates whether the user agent should collect and return the payer's phone number as part of the payment request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentOptions.RequestShipping">
            <summary>
            Indicates whether the user agent should collect and return a shipping address as part of the payment request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentOptions.ShippingType">
            <summary>
            If requestShipping is set to true, then the shippingType field may be used to influence the way the user agent presents the user interface for gathering the shipping address
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentOptions.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.PaymentRequest">
            <summary>
            A request to make a payment
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.PaymentRequest.PaymentActionType">
            <summary>
            Action type for Payment action
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.PaymentRequest.PaymentContentType">
            <summary>
            Content-type for Payment card
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequest.Id">
            <summary>
            ID of this payment request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequest.MethodData">
            <summary>
            Allowed payment methods for this request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequest.Details">
            <summary>
            Details for this request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequest.Options">
            <summary>
            Provides information about the options desired for the payment request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequest.Expires">
            <summary>
            Expiration for this request, in ISO 8601 duration format (e.g., 'P1D')
            </summary>
            <remarks>
            If omitted, a default expiration is chosen
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequest.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.PaymentRequestComplete">
            <summary>
            Payload delivered when completing a payment request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequestComplete.Id">
            <summary>
            Payment request ID
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequestComplete.PaymentRequest">
            <summary>
            Initial payment request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequestComplete.PaymentResponse">
            <summary>
            Corresponding payment response
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequestComplete.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.PaymentRequestCompleteResult">
            <summary>
            Result from a completed payment request
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.PaymentRequestCompleteResult.UnknownResult">
            <summary>
            The payment request completed with an unknown state
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.PaymentRequestCompleteResult.SuccessResult">
            <summary>
            The payment request completed successfully
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.PaymentRequestCompleteResult.FailResult">
            <summary>
            The payment request failed or was cancelled
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequestCompleteResult.Result">
            <summary>
            Result of the payment request completion
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequestCompleteResult.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.PaymentRequestUpdate">
            <summary>
            An update to a payment request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequestUpdate.Id">
            <summary>
            ID for the payment request to update
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequestUpdate.Details">
            <summary>
            Update payment details
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequestUpdate.ShippingAddress">
            <summary>
            Updated shipping address
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequestUpdate.ShippingOption">
            <summary>
            Updated shipping options
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequestUpdate.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.PaymentRequestUpdateResult">
            <summary>
            A result object from a Payment Request Update invoke operation
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequestUpdateResult.Details">
            <summary>
            Update payment details
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentRequestUpdateResult.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.PaymentResponse">
            <summary>
            A PaymentResponse is returned when a user has selected a payment method and approved a payment request
            </summary>
            <remarks>
            See https://www.w3.org/TR/payment-request/#paymentresponse-interface
            </remarks>
        </member>
        <member name="F:Microsoft.Bot.Schema.PaymentResponse.ContentType">
            <summary>
            Content-Type for PaymentRequest
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentResponse.MethodName">
            <summary>
            The payment method identifier for the payment method that the user selected to fulfil the transaction
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentResponse.Details">
            <summary>
            A JSON-serializable object that provides a payment method specific message used by the merchant to process the transaction and determine successful fund transfer
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentResponse.ShippingAddress">
            <summary>
            If the requestShipping flag was set to true in the PaymentOptions passed to the PaymentRequest constructor, then shippingAddress will be the full and final shipping address chosen by the user
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentResponse.ShippingOption">
            <summary>
            If the requestShipping flag was set to true in the PaymentOptions passed to the PaymentRequest constructor, then shippingOption will be the id attribute of the selected shipping option
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentResponse.PayerEmail">
            <summary>
            If the requestPayerEmail flag was set to true in the PaymentOptions passed to the PaymentRequest constructor, then payerEmail will be the email address chosen by the user
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentResponse.PayerPhone">
            <summary>
            If the requestPayerPhone flag was set to true in the PaymentOptions passed to the PaymentRequest constructor, then payerPhone will be the phone number chosen by the user
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentResponse.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.PaymentShippingOption">
            <summary>
            Describes a shipping option
            </summary>
            <remarks>
            See https://www.w3.org/TR/payment-request/#paymentshippingoption-dictionary
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentShippingOption.Id">
            <summary>
            String identifier used to reference this PaymentShippingOption
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentShippingOption.Label">
            <summary>
            Human-readable description of the item
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentShippingOption.Amount">
            <summary>
            Contains the monetary amount for the item
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentShippingOption.Selected">
            <summary>
            Indicates whether this is the default selected PaymentShippingOption
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PaymentShippingOption.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.PreFlightedUser">
            <summary>
            records to pre-provision the user with feature flights
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PreFlightedUser.Email">
            <summary>
            lower cased email address to identify the user
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.PreFlightedUser.Flights">
            <summary>
            list of flight names, the user will be pre-provisioned with
            when we create a new user (when user first login), we will 
            populate the user's SystemHashTags with the flights in this record
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.Redactors.IChannelRedactor">
            <summary>
            IChannelRedactor interface
            This interface defines methods that channels need to implement
            to be able to Redact the properties in their own fashion
            NOTE: Channels MUST implement their own version of this interface
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Redactors.IChannelRedactor.RedactActivityId(System.String)">
            <summary>
            Redact ActivityId
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Redactors.IChannelRedactor.RedactConversationId(System.String)">
            <summary>
            Redact ConversationId
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Redactors.IChannelRedactor.RedactMemberId(System.String)">
            <summary>
            Redact Member Id
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Redactors.IChannelRedactor.RedactUserId(System.String)">
            <summary>
            Redact User Id
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ReflectionUtilities">
            <summary>
            Reflection utilities
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ReflectionUtilities.GetStaticFields``2">
            <summary>
            Get all const and static readonly fields within a class of a particular type
            </summary>
            <typeparam name="TDefining">Type defining the const and readonly fields</typeparam>
            <typeparam name="TReturn">Type of const and readonly fields to return</typeparam>
            <returns>Values of const and readonly fields</returns>
        </member>
        <member name="T:Microsoft.Bot.Schema.BotActivityMessage">
            <summary>
            A message representing a bot's activity (sending/receiving a message), transmitted over the reporting Service Bus
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.Name">
            <summary>
            Content-type for this message
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.Timestamp">
            <summary>
            When this message was created
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.BotId">
            <summary>
            Bot ID
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.Recipient">
            <summary>
            Recipient of the bot's activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.From">
            <summary>
            From field of the bot's activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.ActivityType">
            <summary>
            Type of activity sent
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.ConversationId">
            <summary>
            Conversation ID for the activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.InGroup">
            <summary>
            True if the activity occurred in a group conversation
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.ConversationType">
            <summary>
            Type of conversation, if populated
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.Succeeded">
            <summary>
            True if the activity succeeded
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.StatusCode">
            <summary>
            HTTP status code for the activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.BotVersion">
            <summary>
            The version of the bot generating the activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.Duration">
            <summary>
            Duration of the call to send the activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.CorrelationId">
            <summary>
            Correlation ID for this activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.BotUserAgent">
            <summary>
            The user-agent string sent by the bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.Features">
            <summary>
            Features used in this activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.ToBot">
            <summary>
            True if the message was sent to the bot; false otherwise
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.UsageProperties">
            <summary>
            UsageProperties about the activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.Region">
            <summary>
            The region where the message was processed (westus, etc)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotActivityMessage.Machine">
            <summary>
            The machine that processed the message
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.BotLogMessage">
            <summary>
            A message communicating a bot log entry over the reporting Service Bus
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotLogMessage.Name">
            <summary>
            Content-type for this message
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotLogMessage.When">
            <summary>
            When this message was generated
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotLogMessage.BotId">
            <summary>
            Bot ID for this entry
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotLogMessage.Severity">
            <summary>
            Severity of this entry
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotLogMessage.Message">
            <summary>
            Message for this entry
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.BotLogMessage.Error">
            <summary>
            Any error related to the activity
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ChannelStatusMessage">
            <summary>
            A message indicating an entire channel is down, communicated over the reporting Service Bus
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelStatusMessage.Name">
            <summary>
            Content-type for this message
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelStatusMessage.Created">
            <summary>
            When this message was created
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelStatusMessage.Status">
            <summary>
            Severity of the status
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelStatusMessage.Topic">
            <summary>
            Topic associated with the status
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ChannelStatusMessage.Message">
            <summary>
            Message associated with the status
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ClientActionMessage">
            <summary>
            A message representing an action taken by a client
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ClientActionMessage.Name">
            <summary>
            Content-type for this message
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ClientActionMessage.ClientName">
            <summary>
            Name of this client
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ClientActionMessage.ClientId">
            <summary>
            (Optional) ID for this client
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ClientActionMessage.ClientAction">
            <summary>
            Action the client took
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ClientActionMessage.ConversationId">
            <summary>
            (Optional) conversation where this action occurred
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ClientActionMessage.CorrelationId">
            <summary>
            Correlation ID for this action
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ClientActionMessage.BotId">
            <summary>
            Bot ID
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ClientActionMessage.Features">
            <summary>
            Features used in this action
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ReportingMessageContentType">
            <summary>
            Reporting message content
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ReportingMessageContentType.BotActivityMessage">
            <summary>
            Bot activity message content
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ReportingMessageContentType.BotLogMessage">
            <summary>
            Bot log message
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ReportingMessageContentType.ChannelStatusMessage">
            <summary>
            Channel status message
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.ReportingMessageContentType.ClientActionMessage">
            <summary>
            Channel action message
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ReportingMessage">
            <summary>
            Reporting message for serialization between services
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReportingMessage.Name">
            <summary>
            Content-type for this message
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ReportingMessage.ChannelId">
            <summary>
            Channel ID for this entry
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.UsageProperties">
            <summary>
            A set of properties that describe the nature of usage
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.UsageProperties.IsSpeechMessage">
            <summary>
            Whether the message contains speech audio or only text
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ResourceOperation">
            <summary>
            Abstraction for an asynchronous operation in a resource managed by our resource provider.
            Asynchronous operation examples are primarily moving a resource from one subscription or resource
            group to another or creating a bot resource
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ResourceOperation.ProviderNamespace">
            <summary>
            Namespace of the resource provider. For bots, currently there is a single
            constant namespace Microsoft.BotService
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ResourceOperation.SubscriptionId">
            <summary>
            Id of the subscription, a guid
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ResourceOperation.Location">
            <summary>
            ARM protocol calls this field location, but it actually refers to the resource group
            of a resource. If there is a resource move, the location refers to the source resource
            group, i.e. before moving
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ResourceOperation.OperationResultName">
            <summary>
            This is a guid that identifies an operation. We receive this guid from ARM.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ResourceOperation.OperationResultStateString">
            <summary>
            State of the operation result. We store the string because the strongly typed state is in
            the ARM SDK library which we don't want to reference in this layer.
            Examples are 'Moving', 'Succeeded'
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ResourceOperation.RetryAfter">
            <summary>
            We can specify how long ARM should wait before checking the operation state.
            All our operations are almost instant at this point so we don't use this and 
            let ARM use its default values
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ResourceOperation.TerminalHttpStatusCode">
            <summary>
            If the operation is in terminal state (i.e. 'Succeeded', 'Failed') then we can specify
            the termninal status code here
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ResourceOperation.StartTime">
            <summary>
            When the overall operation started
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ResourceOperation.EndTime">
            <summary>
            End time of the operation if it is in a terminals tate
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ResourceOperation.PercentComplete">
            <summary>
            We can specify percentage completed for clients
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ResourceOperation.Properties">
            <summary>
            Properties in json format. These properties have critical information used by ARM generally. 
            For example, during a resource move the properties contain the target subscription and resource group.
            Example from real life:
            {  
                "targetSubscriptionId": "41e010d8-8a1c-4c4b-9fca-d31fb6e90655",  
                "targetResourceGroupName": "ccastro1128move03target",  
                "resourceIdsToMove": 
                [    
                    "/subscriptions/35fa7461-d48a-4053-9aa2-56c014495e89/resourceGroups/ccastro1128move03/providers/Microsoft.BotService/botServices/ccastro1128move03"  
                ]
            }
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ResourceOperation.ResponseContent">
            <summary>
            Content that we want to send in the response when asked for progress in this operation
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ResourceOperation.ResponseMediaType">
            <summary>
            Mediua type of the content that we want to send in the response when asked for progress in this operation
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ResourceOperation.ErrorInfoString">
            <summary>
            Stores errors related to the long running operation
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ResourceOperation.ChangedTime">
            <summary>
            Time the operation result was changed
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ResourceOperation.Redact">
            <summary>
            Return properties safe for logging.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.ResourceResponse">
            <summary>
            A response containing a resource ID
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ResourceResponse.#ctor(System.String)">
            <summary>
            Create a new instance of the ResourceResponse class
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:Microsoft.Bot.Schema.ResourceResponse.Id">
            <summary>
            Id of the resource 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.ResourceResponse.Properties">
            <summary>
            Additional JSON properties
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ResourceResponse.Redact">
            <summary>
            Get redacted version of this object.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.ResourceResponse.CopyNonRedacted(System.Object)">
            <summary>
            Copy the non-redacted properties from nonRedacted to "this".
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.RoleTypes">
            <summary>
            Role of the entity behind the account (Example: User, Bot, etc.)
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.RoleTypes.All">
            <summary>
            All defined activity types
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.RoleTypes.User">
            <summary>
            A user in the conversation
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.RoleTypes.Bot">
            <summary>
            A bot in the conversation
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.SemanticAction">
            <summary>
            Represents a reference to a programmatic action
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.SemanticAction.State">
            <summary>
            State of this action. Allowed values: `start`, `continue`, `done`
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.SemanticAction.Id">
            <summary>
            ID of this action
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.SemanticAction.Entities">
             <summary>
             Entities associated with this action
             </summary>
             <remarks>
             The name identifies the meaning of each entity, and the `type` field
             defines its shape. Producers and consumers agree ahead of time on the
             list and type of supported entities, communicated via the Bot Framework
             Manifest.
             
             Example:
             
            "entities": {
                "sourceAirport": {
                    "type": "http://icao.org/airport/code",
                    "code": "KSEA",
                    "name": "Seattle-Tacoma International Airport",
                },
                "destinationAirport": {
                    "type": "http://schema.org/City",
                    "name": "New York",
                    "geo": {
                        "type": "http://schema.org/GeoCoordinates",
                        "latitude": 40.7127,
                        "longitude": -74.0059
                    }
                }
             </remarks>
        </member>
        <member name="T:Microsoft.Bot.Schema.SemanticActionStates">
            <summary>
            Indicates whether the semantic action is starting, continuing, or done
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.SemanticActionStates.Start">
            <summary> 
            The sender is requesting the start of this action
            </summary> 
        </member>
        <member name="F:Microsoft.Bot.Schema.SemanticActionStates.Continue">
            <summary>
            The sender is indicating the action is continuing
            </summary> 
        </member>
        <member name="F:Microsoft.Bot.Schema.SemanticActionStates.Done">
            <summary>
            The sender is indicating the action is done
            </summary> 
        </member>
        <member name="T:Microsoft.Bot.Schema.SeverityType">
            <summary>
            Severity type
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.SeverityType.OK">
            <summary>
            Working properly
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.SeverityType.Warning">
            <summary>
            Possible issue
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.SeverityType.Error">
            <summary>
            Not operational
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.SubscriptionState">
            <summary>
            The subscription state in a particular resource provider.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.SubscriptionState.NotDefined">
            <summary>
            The subscription state is unknown.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.SubscriptionState.Registered">
            <summary>
            The subscription is entitled to use your "ResourceProviderNamespace". All management
            APIs must function (PUT/PATCH/DELETE/POST/GET). All resources must run normally
            and bill normally.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.SubscriptionState.Unregistered">
            <summary>
            The subscription no longer has access to the resource provider. All the existing
            resources should be de-provisioned. Only GETs are permitted.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.SubscriptionState.Suspended">
            <summary>
            The subscription has been suspended (generally due to fraud or non-payment) and
            the RP should stop the subscription from generating any additional usage. Pay-for-use
            resource should have access rights revoked when the subscriptions is suspended.
            In such cases the RP should also mark the Resource State as "Suspended." It is
            recommended that suspend is treated as a soft delete so as to get the customer's
            attention. GET/DELETE management APIs must function; PUT/PATCH/POST must not.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.SubscriptionState.Deleted">
            <summary>
            The subscription has been deleted; the customer has canceled their subscription
            and its content can be cleaned up. None of the management APIs must function.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.SubscriptionState.Warned">
            <summary>
            The subscription has been warned (generally due to forthcoming suspension resulting
            from fraud or non-payment). Resources must be offline but in running (or quickly
            recoverable state). Do not de-allocate resources. GET/DELETE management APIs
            must function; PUT/PATCH/POST must not.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.Subscription">
            <summary>
            The record to track information about Azure subscriptions.
            The BotFramework resource provider API receives notifications about subscription status, which
            are represented by this entity. Channels check the state of the subscription for billing purposes.
            Note that the bot record has a boolean that indicates whether the subscription is blocked or not. This 
            is an optimization, since we intend to avoid reading the bot service and the subscription for each record
            for performance reasons. The master of the subscription state is this table, and an async process denormalizes the
            state into bots for that subscription. The reason to have the subscription separate is that as a resource provider,
            we could get notifications for a subscription that does not have bots, which means that the lifecycles are not coupled.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Subscription.#ctor">
            <summary>
            Creates an instance of the Subscription class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Subscription.Redact">
            <summary>
            Redact this object
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Subscription.ProviderNamespace">
            <summary>
            Gets the provider namespace, for example Microsoft.BotService
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Subscription.SubscriptionId">
            <summary>
            Gets the subscription identifier
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Subscription.RegistrationDate">
            <summary>
            Gets or sets the registration date in RFC 1123 format. http://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Subscription.Properties">
            <summary>
            Gets or Sets custom properties
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Subscription.ChangedTime">
            <summary>
            Gets or sets the last time the entity was changed
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Subscription.SubscriptionState">
            <summary>
            Gets or sets the subscription state notified to the resource provider endpoint.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.SuggestedActions">
            <summary>
            SuggestedActions that can be performed
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.SuggestedActions.#ctor">
            <summary>
            Create a new instance of the SuggestedActions class
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.SuggestedActions.To">
            <summary>
            Ids of the recipients that the actions should be shown to.  These Ids are relative to the channelId and a subset of all recipients of the activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.SuggestedActions.Actions">
            <summary>
            Actions that can be shown to the user
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.SwaggerStringEnumAttribute">
            <summary>
            Emit enumerated values in Swagger for a string type
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.SwaggerStringEnumAttribute.#ctor">
            <summary>
            Create a new instance of the SwaggerStringEnumAttribute type
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.SwaggerStringEnumAttribute.#ctor(System.Type)">
            <summary>
            Create a new instance of the SwaggerStringEnumAttribute type
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.SwaggerStringEnumAttribute.InitFromType(System.Type)">
            <summary>
            Initialize the list of enumerated values from the specified type
            </summary>
            <param name="staticStringType">Type from which to generate enumerated values</param>
        </member>
        <member name="M:Microsoft.Bot.Schema.SwaggerStringEnumAttribute.#ctor(System.String,System.String[])">
            <summary>
            Create a new instance of the SwaggerStringEnumAttribute type
            </summary>
            <param name="name">Name of the type</param>
            <param name="values">Values of the type</param>
        </member>
        <member name="P:Microsoft.Bot.Schema.SwaggerStringEnumAttribute.Name">
            <summary>
            Name of the type
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.SwaggerStringEnumAttribute.Values">
            <summary>
            Values of the type
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.TextFormatTypes">
            <summary>
            Text format types
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.TextFormatTypes.Markdown">
            <summary>
            Default- interpret text fields as markdown
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.TextFormatTypes.Plain">
            <summary>
            Plain text (do not interpret as anything)
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.TextFormatTypes.Xml">
            <summary>
            B, I, S, U, A NOTE: Only supported on Skype for now
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.TextHighlight">
            <summary>
            Refers to a substring of content within another field
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.TextHighlight.Text">
            <summary>
            Defines the snippet of text to highlight
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.TextHighlight.Occurrence">
            <summary>
            Occurrence of the text field within the referenced text, if multiple exist.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.TokenOperations">
            <summary>
            Names for event operations in the token protocol
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.TokenOperations.TokenRequestOperationName">
            <summary>
            Name for the Token Request operation event
            </summary>
            <remarks>
            This event operation includes a TokenRequest object and returns a TokenResponse object
            </remarks>
        </member>
        <member name="F:Microsoft.Bot.Schema.TokenOperations.TokenResponseOperationName">
            <summary>
            Name for the Token Response operation event
            </summary>
            <remarks>
            This event operation represents the TokenResponse object
            </remarks>
        </member>
        <member name="T:Microsoft.Bot.Schema.TokenRequest">
            <summary>
            A request to receive a user token
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.TokenRequest.Provider">
            <summary>
            The provider to request a user token from
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.TokenRequest.Settings">
            <summary>
            A collection of settings for the specific provider for this request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.TokenRequest.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.TokenResponse">
            <summary>
            A response that includes a user token
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.TokenResponse.ChannelId">
            <summary>
            The channelId of the TokenResponse
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.TokenResponse.ConnectionName">
            <summary>
            The connection name
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.TokenResponse.Token">
            <summary>
            The user token
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.TokenResponse.Expiration">
            <summary>
            Expiration for the token, in ISO 8601 format (e.g. "2007-04-05T14:30Z")
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.TokenResponse.Properties">
            <summary>
            Extension data for overflow of properties
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.Transcript">
            <summary>
            Transcript
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.Transcript.#ctor">
            <summary>
            Create an instance of the Transcript class.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.Transcript.Activities">
            <summary>
            A collection of Activities that conforms to the Transcript schema.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.User">
            <summary>
            Record for tracking information about a user
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.User.ObservedLanguages">
            <summary>
            As long as languages is empty, we will observe languages to auto detect users primary language
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.User.EmailSubscription">
            <summary>
            Information about email subscription of the user
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.User.UserAgreementConsentVersion">
            <summary>
            User agreement consent version (for terms and conditions)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.User.CountryCode">
            <summary>
            The country or region code of the user
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.User.#ctor">
            <summary>
            Create a new instance of the User class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.User.GetEmails">
            <summary>
            Gets list of all emails from channel accounts
            </summary>
            <returns>List of all emails from channel accounts</returns>
        </member>
        <member name="T:Microsoft.Bot.Schema.UserAgreementConsentVersion">
            <summary>
            The version enumeration for user agreement of terms and conditions
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserAgreementConsentVersion.V1">
            <summary>
            v1
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserAgreementConsentVersion.V2">
            <summary>
            v2
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.UserBase">
            <summary>
            Record for tracking information about a user
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserBase.None">
            <summary>
            String signifying no roles
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.UserBase.Tags">
            <summary>
            Hashtag values
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserBase.Tags.SkypeDirect">
            <summary>
            Turn off costar and send native endpoint to APS
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.UserBase.SystemTags">
            <summary>
            SystemHashtag values
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserBase.SystemTags.Featured">
            <summary>
            Bot is featured
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserBase.SystemTags.Blocked">
            <summary>
            Bot is blocked
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserBase.SystemTags.Approved">
            <summary>
            Bot is approved
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserBase.SystemTags.Flagged">
            <summary>
            Bot is flagged
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserBase.SystemTags.Locked">
            <summary>
            Bot is locked
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserBase.SystemTags.Rejected">
            <summary>
            Bot is rejected
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserBase.SystemTags.SkypeBlocked">
            <summary>
            Bot is blocked on Skype
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserBase.SystemTags.SkypeTrusted">
            <summary>
            Bot is trusted on Skype
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserBase.SystemTags.Payments">
            <summary>
            Bot is enabled for payments
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserBase.SystemTags.V30Auth">
            <summary>
            Bot is sending messages with v3.0 auth headers
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserBase.SystemTags.Throttle">
            <summary>
            Requests from this bot should be throttled
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserBase.SystemTags.NoThrottle">
            <summary>
            Requests from this bot should not be throttled
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserBase.SystemTags.NoMeters">
            <summary>
            This bot does not do included quantity checks for billing meters
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserBase.SystemTags.HighLoad">
            <summary>
            This bot puts an unusually high load on the channel and may have special processing to lessen that load
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.UserBase.SystemTags.DisableLongPoll">
            <summary>
            This bot does not want long polling
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.UserBase.#ctor">
            <summary>
            Create an instance of the UserBase class
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.UserBase.Id">
            <summary>
            Globally unique Id for the user
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.UserBase.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.UserBase.CreatedDate">
            <summary>
            UTC date time offset of when the object is first created
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.UserBase.LastSavedDate">
            <summary>
            UTC date time offset of the last time this object was updated
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.UserBase.ChannelAccounts">
            <summary>
            The ChannelAccounts you can communicate with this user on
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.UserBase.Languages">
            <summary>
            What languages does the user or bot speak?
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.UserBase.Roles">
            <summary>
            Roles user is a member of
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.UserBase.SystemHashtags">
            <summary>
            Admin settable system hash tags see UserBase.SystemTags
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.UserBase.AddChannelAccount(Microsoft.Bot.Schema.V1.ChannelAccount)">
            <summary>
            Add a channel account for a user
            </summary>
            <param name="newChannelAccount"></param>
        </member>
        <member name="M:Microsoft.Bot.Schema.UserBase.RemoveChannelAccount(System.String,System.String)">
            <summary>
            Remove the channel for the bot
            </summary>
            <param name="channelId"></param>
            <param name="address"></param>
            <returns>returns the channleAccount</returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.UserBase.AddRole(System.String)">
            <summary>
            Add the user to a role
            </summary>
            <param name="role"></param>
            <returns>true if added, false if already in role</returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.UserBase.RemoveRole(System.String)">
            <summary>
            Remove user from role
            </summary>
            <param name="role"></param>
            <returns>true if removed, false if not in role</returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.UserBase.RemoveAllRoles">
            <summary>
            Remove user from all roles
            </summary>
            <returns>true if the user was in any roles, false if they were not and no changes were made</returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.UserBase.IsInRole(System.String)">
            <summary>
            Checks if the user is a member of the role
            </summary>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Bot.Schema.V1.ChannelAccount">
            <summary>
            Channel account information needed to route a message 
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.V1.ChannelAccount.SERVICE_ADDRESS">
            <summary>
             When service commands are sent the from field will have a Address set to the SERVICE_ADDRESS
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.V1.ChannelAccount.#ctor">
            <summary>
            Create an instance of the ChannelAccount class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.V1.ChannelAccount.#ctor(System.String)">
            <summary>
            Create an instance of the ChannelAccount class
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.V1.ChannelAccount.ToString">
            <summary>
            Render this ChannelAccount to string
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.V1.ChannelAccount.Name">
            <summary>
            Display friendly name of the user or bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.V1.ChannelAccount.ChannelId">
            <summary>
            Channel Id that the channelAccount is to be communicated with (Example: slack, sms, email, groupme, skype, twitter, etc.)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.V1.ChannelAccount.Address">
            <summary>
            Channel Address for the channelAccount (Example: joe@smith.com, or @joesmith or 123456)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.V1.ChannelAccount.Id">
            <summary>
            Id - id of the shared bot or user this channelaccount refers to 
            </summary>
            <remarks>
            A user and a bot can have multiple channel accounts associated with them.  This is the shared ID that 
            associates the accounts together.
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Schema.V1.ChannelAccount.IsBot">
            <summary>
            Is this id a bot?
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Schema.V1.ChannelAccount.GetSecret">
            <summary>
            Secret is only available in memory, not serialized to any client
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Bot.Schema.V1.ChannelAccount.UpdateFromChannelAccountInfo(Microsoft.Bot.Schema.ChannelAccountInfo)">
            <summary>
            Update this ChannelAccount from the information in a ChannelAccountInfo class
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.V1.ErrorCodes">
            <summary>
            Error codes to communicate when throwing an APIException
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.V1.ErrorCodes.MissingProperty">
            <summary>
            a property was missing
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.V1.ErrorCodes.MalformedData">
            <summary>
            an argument was formatted incorrectly
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.V1.ErrorCodes.NotFound">
            <summary>
            The resource was not found
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.V1.ErrorCodes.ServiceError">
            <summary>
            The bot service returned a failure status code
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.V1.ErrorCodes.Internal">
            <summary>
            Internal error
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.V1.ErrorCodes.InvalidRange">
            <summary>
            The specified value is out of range
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.V1.ErrorCodes.NotSupported">
            <summary>
            The action is not supported by the system. 
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.V1.ErrorCodes.NotAllowed">
            <summary>
            The action is not allowed by the system because of who the caller
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Schema.V1.ErrorCodes.BadCertificate">
            <summary>
            The service HTTPS certificate is invalid
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.V1.Error">
            <summary>
            An error message
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.V1.Error.Code">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.V1.Error.Message">
            <summary>
            Error message
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.V1.Error.StatusCode">
            <summary>
            Status code
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Schema.V1.ErrorMessage">
            <summary>
            A standardized message error payload
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Schema.V1.ErrorMessage.Error">
            <summary>
            Error message
            </summary>
        </member>
        <member name="T:Microsoft.Bot.ChannelConnector.Models.ActivityContext">
            <summary>
            Call context for an activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.ActivityContext.Activity">
            <summary>
            Activity
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.ActivityContext.BotAccount">
            <summary>
            ChannelAccount for the bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.ActivityContext.BotAccountInfo">
            <summary>
            ChannelAccountInfo for the bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.ActivityContext.BotService">
            <summary>
            Bot service object
            </summary>
        </member>
        <member name="M:Microsoft.Bot.ChannelConnector.Models.ActivityContext.Redact">
            <summary>
            Redact the ActivityContext
            </summary>
        </member>
        <member name="M:Microsoft.Bot.ChannelConnector.Models.ActivityContext.LookupRecordsAsync(Microsoft.Bot.Schema.IStorage)">
            <summary>
            Fill in activity context
            </summary>
        </member>
        <member name="T:Microsoft.Bot.ChannelConnector.Models.APIContext">
            <summary>
            Call context for an API call
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.APIContext.ChannelId">
            <summary>
            ChannelId 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.APIContext.BotId">
            <summary>
            (Optional) Bot ID found in the request
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.APIContext.BotMsaAppId">
            <summary>
            (Optional) Bot MsappID found in the request
            </summary>
        </member>
        <member name="T:Microsoft.Bot.ChannelConnector.Models.AttachmentContext">
            <summary>
            Call context for an attachment call
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.AttachmentContext.ConversationId">
            <summary>
            Conversation ID where this attachment was uploaded
            </summary>
        </member>
        <member name="T:Microsoft.Bot.ChannelConnector.Models.BotStateData">
            <summary>
            Data stored in the bot state store for this bot
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.BotStateData.ConversationId">
            <summary>
            ConversationId
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.BotStateData.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.BotStateData.Data">
            <summary>
            Data 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.BotStateData.LastModified">
            <summary>
            Last modified time
            </summary>
        </member>
        <member name="T:Microsoft.Bot.ChannelConnector.Models.BotStateDataResult">
            <summary>
            Result of a query for BotStateData in a channel
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.BotStateDataResult.ContinuationToken">
            <summary>
            ContinuationToken. If this is not null, there is more data to be returned
            </summary>
        </member>
        <member name="F:Microsoft.Bot.ChannelConnector.Models.BotStateDataResult.BotStateData">
            <summary>
            Array of BotStateData objects
            </summary>
        </member>
        <member name="T:Microsoft.Bot.ChannelConnector.Models.ComponentStatus">
            <summary>
            Status of a component of a health status check
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.ComponentStatus.Status">
            <summary>
            Health status of the component
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.ComponentStatus.Name">
            <summary>
            Name of the component
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.ComponentStatus.Type">
            <summary>
            Type of the Component
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.ComponentStatus.ResponseTimeMs">
            <summary>
            Response time in milliseconds
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.ComponentStatus.Message">
            <summary>
            Error message if component is unhealthy
            </summary>
        </member>
        <member name="T:Microsoft.Bot.ChannelConnector.Models.ComponentType">
            <summary>
            Component type enumeration
            </summary>
        </member>
        <member name="F:Microsoft.Bot.ChannelConnector.Models.ComponentType.Unknown">
            <summary>
            Unknown type
            </summary>
        </member>
        <member name="F:Microsoft.Bot.ChannelConnector.Models.ComponentType.Other">
            <summary>
            Other type
            </summary>
        </member>
        <member name="F:Microsoft.Bot.ChannelConnector.Models.ComponentType.Table">
            <summary>
            Azure Table
            </summary>
        </member>
        <member name="F:Microsoft.Bot.ChannelConnector.Models.ComponentType.Redis">
            <summary>
            Redis Cache
            </summary>
        </member>
        <member name="F:Microsoft.Bot.ChannelConnector.Models.ComponentType.Index">
            <summary>
            Search Index
            </summary>
        </member>
        <member name="F:Microsoft.Bot.ChannelConnector.Models.ComponentType.Queue">
            <summary>
            Azure Queue
            </summary>
        </member>
        <member name="F:Microsoft.Bot.ChannelConnector.Models.ComponentType.ServiceBus">
            <summary>
            ServiceBus
            </summary>
        </member>
        <member name="F:Microsoft.Bot.ChannelConnector.Models.ComponentType.CosmosDB">
            <summary>
            Azure CosmosDB
            </summary>
        </member>
        <member name="T:Microsoft.Bot.ChannelConnector.Models.HealthStatus">
            <summary>
            Health status of the component
            </summary>
        </member>
        <member name="F:Microsoft.Bot.ChannelConnector.Models.HealthStatus.Unknown">
            <summary>
            Component health is unknown
            </summary>
        </member>
        <member name="F:Microsoft.Bot.ChannelConnector.Models.HealthStatus.Healthy">
            <summary>
            Component is in the healthy state
            </summary>
        </member>
        <member name="F:Microsoft.Bot.ChannelConnector.Models.HealthStatus.Warning">
            <summary>
            Component is in the warning state
            </summary>
        </member>
        <member name="F:Microsoft.Bot.ChannelConnector.Models.HealthStatus.Error">
            <summary>
            Component is in the Error state
            </summary>
        </member>
        <member name="T:Microsoft.Bot.ChannelConnector.Models.HealthStatusResponse">
            <summary>
            Response from the Health Api
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.HealthStatusResponse.Status">
            <summary>
            Overall health status of the service
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.HealthStatusResponse.ServiceName">
            <summary>
            Name of the service
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.HealthStatusResponse.Region">
            <summary>
            Region the service is running in
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.HealthStatusResponse.Machine">
            <summary>
            Name of the machine the service is running on
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.HealthStatusResponse.Components">
            <summary>
            Components that were tested as part of the health check
            </summary>
        </member>
        <member name="P:Microsoft.Bot.ChannelConnector.Models.HealthStatusResponse.AdditionalStatus">
            <summary>
            (Optional) Additional health status
            </summary>
        </member>
    </members>
</doc>
